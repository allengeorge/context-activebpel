ActiveBPEL engine v4.1 0 (20070925) 
 
org.activebpel.rt

* 1) Moved WSDL namespace decl to IAeConstants 2) document loading and
  validaiton now supports schemas as input streams and strings in addition to
  castor schema objects 3) added a closer for jar util reader [ build 420,
  6/29/07]


* Added "joinStrings" to AeUtil which will take a collection of strings and
  concat them together using a given separator. [ build 421, 7/5/07]


* 1) overload of AeXmlUtil.doTransform to accept a URIResolver to handle
  imports [ build 422, 7/5/07]


* check for null prefix in AeXmlUtil.encodeQName [ build 423, 7/11/07]


* Renamed getText() with xpath variant to selectText(). Spaces-in-location bug
  fix in bpel extended wsdl def (use AeUTF8Util.decode() when adding schema
  location to list of schema refs in buildSchemaMap()) [ build 424, 7/11/07]


* 1) added features map to AeXMLParserBase. Enables callers to turn on vendor
  specific features for SAXFactory or DocumentBuilderFactory. Added mainly for
  test cases or situations where the code is aware of the provider. [ build
  425, 7/12/07]


* Refactored xpath-related util methods out of AeXmlUtil and into a new class
  called AeXPathUtil. [ build 426, 7/12/07]


* Renamed joinStrings() to joinToStringObjects() to make the method more
  generic. [ build 427, 7/18/07]


* Fixed problem where the xml formatter for html pages was not escaping
  ampersands. [ build 428, 7/26/07]


* refractored mime headers to attributes, added getBigNumber utility method [
  build 429, 7/26/07]


* Added new serializers and deserializers to handle Policy and PolicyReference
  WSDL extensions to support WS-Policy Attachment spec. AeBPELExtendedWSDLDef
  now supports locating policy by reference URI from the definition and it's
  imports. [ build 430, 7/27/07]


* Moved keystore utility methods out of AeCryptoUtil in the server project
  into AeJCEUtil so they can be more easily shared with standalone clients [
  build 431, 8/2/07]


* 1) added AeConfiguration.getIntEntryByPath(String,defaultValue) as a
  convenience method for getting an int from the engine config [ build 432,
  8/6/07]


* 1) added support for anytype element to sample data generation [ build 433,
  8/9/07]


* refactored reading/writing of WSDL extensions. Was previously specific to
  extensions for BPEL (property, property alias, partner link type) but the
  addition of WS-Policy extensions which don't vary based on BPEL namespace
  required some refactoring. [ build 434, 8/13/07]


* Updated AeCreateSampleMessage to check for NPE (and report appropriate
  errors) if element decl or xml type cannot be located [ build 435, 8/13/07]


* Added default Content-Id for inline attachments to AeMimeUtil. [ build 436,
  8/16/07]


* Removed the <!DOCTYPE > element from ws-addressing-2005-08.xsd so we do not
  always go out to the internet to resolve the xml schema dtd. [ build 437,
  8/16/07]


* 1) added new variant of createConfigSpecificClass() that takes an array of
  args [ build 438, 8/16/07]


* 1) added selectSingleObject() to xpath util - returns object rather than
  Node 2) added addDuration() to AeSchemaDateTime - this allows us to add a
  duration onto a dateTime [ build 439, 8/17/07]


* Needed to expose, for reuse, the private static Strings PROJECT_RELATIVE_URI
  and PROJECT_PATH_SEPARATOR. [ build 440, 8/21/07]


* 1) AeMimeUtil supports more common mime types 2) AeMimeUtil now supports
  windows filenames with spaces [ build 441, 9/7/07]


* Updated AeXmlUtil::doTransform(..) to check to see if the XSL transform
  factory (class name) is based on weblogic impl., and if so, to use the
  factory impl. from bundled xalan.jar - as work around for defect 3112 [
  build 442, 9/10/07]


* Updated bpel extended wsdl def - when created a bpel extended wsdl def with
  only a schema, we weren't refreshing the schema refs (so the mSchemaDefs had
  a list of Schema objects, but mSchemaReferences was still empty). [ build
  443, 9/12/07]


* Added a static boolean to AeUtil which indicated if the current execution
  platform is Unix. Also added the helper method isUrlLocation. [ build 444,
  9/13/07]

org.activebpel.rt.axis.bpel

* 1) added check for anyType in AeRPCEncodedSerializer to ensure that we
  serialize the correct xsi:type for anyType. [ build 208, 7/18/07]


* support new 4.1 API calls addAttachment, removeAttachments. NOTE:
  addAttachment overides the axis generated skeleton code to retrieve
  attachments directly from the axis MessageContext [ build 209, 7/26/07]


* Added policy reference resolution to the AeInvokeHandler. [ build 210,
  7/27/07]


* Cahnged AeActiveBpelAdminImpl and AeActiveBpelAdminSkeleton to support WS-I
  Basic Profile 1.1. in ActiveBpelAdmin.wsdl [ build 211, 8/1/07]


* Moved AeAxisEngineConfiguration up to the org.activebpel.rt.axis project. [
  build 212, 8/2/07]


* 1) refactored the admin interfaces to remove attachment object from
  signature [ build 213, 8/9/07]


* Updated the AeRPCReceiveHandler to select the first RPC element, rather than
  first child element to be compatible with new apache xml security library
  that preserves the reference elements after decryption. [ build 214,
  8/13/07]


* AeRPCReceiveHandler cannot assume that the first body element within
  envelope is an RPCElement. This was due to a change in the security library
  where ws-security tokens are manifested as multi-refs within the envelope.
  Existing code was handling the input properly but not the output.
  [ build 215, 8/30/07]


* Fixed problem where EventHandler for engine events was defaulting to RPC for
  externally developed event listeners. [ build 216, 9/14/07]

org.activebpel.rt.war

* Fixed the color code for enableColor class in ae.css [ build 10, 8/13/07]


* 1) Added aux build to build the base tag classes to a lib named
  ae_wartags.jar; 2) Updated aetags.tld DTD to use
  http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd; 3) Added method
  getBean(string beanName) to AeAbstractBeanPropertyTag [ build 11, 8/13/07]


* Updated css stylesheet for monitoring warning and error styles. [ build 12,
  8/14/07]


* Updated ae.build.properties to run aux.post.build to build ae_wartags.jar [
  build 13, 8/14/07]


* Updated AeAbstractBeanPropertyTag::getPropertyFromBean(...) to return
  toString version if the property and return type is not specified; and to
  return bean object if the property is not specified but the return type is.
  [ build 14, 9/5/07]


* Added styles to change background color when setting/resetting readonly mode
  of text fields [ build 7, 7/31/07]


* Fixed a problem where the resource bundle pointed to the wrong
  message.propeties location as a result of refactoring of the tag library.
  Also changed the getResource call in the base tag to be public so it could
  be used elsewhere. [ build 8, 8/7/07]


* Updated logo image for ActiveBPEL engine to reflect the new registered
  status of ActiveBPEL trademark. [ build 9, 8/8/07]

org.activebpel.wsio

* Added a null invoke handler for use when recovering one-way invokes. [ build
  35, 7/26/07]

org.activebpel.rt.tamino

* 1) added non-XML (binary) file support to tamino storage layer 2)
  implemented Tamino attachment storage provider [ build 63, 6/29/07]


* 1) Tamino query builder uses the new aeutil method to join together FLWOR
  and clauses 2) added cascading delete support for attachments [ build 64,
  7/5/07]


* Some refactoring, removed a null check that was not needed. [ build 65,
  7/18/07]


* added removeAttachment support [ build 66, 7/26/07]


* 1) created delegate for tamino data source that reports the amount of time
  needed to acquire a db connection 2) added destroy() to IAeTaminoDataSource,
  side effect from offline test framework where the source is destroyed and
  recreated in between test runs. [ build 67, 8/13/07]


* Refactored Tamino layer - introduced a new 'xmldb' package which contains
  most of the old Tamino code. Tamino is now a thin layer on top of xmldb
  which provides only the Tamino specific code. [ build 68, 8/16/07]


* Fixed a problem with Tamino upgrades. Previous refactoring had broken it. [
  build 69, 9/12/07]

org.activebpel.rt.exist

* Initial add of the exist project - this project, like the Tamino project,
  implements a persistence provider - in this case the open source eXist
  database. This project will initially be used for offline testing, since
  eXist can be run in embedded mode (therefore offline tests can be run in
  persistence mode, and we can delete and recreate the database for each
  test). It is possible that the eXist persistence layer may have some value
  beyond testing, which is why it is not a test.org.* project. [ build 2,
  7/24/07]


* Retrying due to build failure... [ build 3, 7/24/07]


* Added new attachment storage provider method to relevant exist impl class. [
  build 4, 7/27/07]


* Major refactoring of the eXist project. This project now "extends" the xmldb
  base project, and only provides those classes that are specific to the eXist
  database. [ build 5, 8/16/07]


* Created an eXist implementation of our Enterprise persistence layer. This is
  a thin implementation based on the com..xmldb foundation. [ build 6,
  8/16/07]


* Changes to exist classpath - jre 1.4 compatibility [ build 7, 8/17/07]


* Improved eXist connection to use different counters for each doc type - this
  way process IDs will be sequential and easier to debug. Added a util class
  that can be used to query an eXist database (useful if an offline
  persistence test fails). Added a flag to the eXist data source to control
  whether to initialize the DB (clear it out) when the data source is created.
  [ build 8, 8/23/07]


* Implemented attachment storage methods for eXist database impl. Attachment
  persistence can now be tested in the offline engine. [ build 9, 8/31/07]

ddl.org.activebpel

* Added Attachment support to Tamino schema. [ build 46, 6/29/07]


* Changes to Tamino upgraders due to refactorings. [ build 47, 8/16/07]

org.activebpel.rt.axis

* Moved AeAxisEngineConfiguration out of the org.activebpel.rt.axis.bpel into
  this project to make it easier to share with standalone axis clients. [
  build 66, 8/2/07]


* 1) Updated AeCatalogServlet to return appropriate http messages (e.g 404,
  500) instead of simple 'no content' message; updated servlet response
  content type to utf-8 [ build 67, 8/13/07]

org.activebpel.rt.bpeladmin.war

* Add Work Manager Threads For Alarms Max: field to engine configuration page.
  [ build 224, 7/2/07]


* Fixed problem where delete text on config page was not externalized. Also
  added jquery.js library to scripts folder for use in console pages. [ build
  225, 8/7/07]


* Updated the ActiveBPEL trademark to registered status. [ build 226, 8/8/07]


* Added method on engine status bean to get monitor status of engine for use
  in JSP [ build 227, 8/9/07]


* Added add/remove attachments to Bpeladmin console. Add a new popup window to
  enter attachment information, added server side admin support. [ build 228,
  8/13/07]


* Fixed problem where link to Help page was broken for tenant deployments [
  build 229, 8/14/07]


* Fixed build issue due to missing commons-fileupload-1.0.jar in build path [
  build 230, 8/14/07]


* Classpath update. [ build 231, 8/16/07]


* 1) fix for defect 3087 2) fixed IE quirk that did not dectet a change in the
  location field 3) automatically add the Content-Location attribute for a
  location 4) added missing message.properties message from previous check in
  5) when a duplicate attribute name is entered it overides the existing value
  instead of creating a duplcate property [ build 232, 8/22/07]


* 1) include processview_attachment.jsp only when the property
  tagName=Variable fixes defect 3139 2) rearranged property edit in
  processview_attachment_add.jsp (fix for defect 3140) 3) added delete
  confirmation for attachment attribute in ae_attachment_update.js (fix defect
  3141) 4) added call to register when property edit is cancelled i
  ae_attachment_update.js(fix for defect 3142) [ build 233, 8/24/07]


* Updated AeProcessDefToWebStateModelVisitor::visit(AeActivityForEachDef aDef)
  to build "single instance" of the forEach container if the forEach activity
  was never run - this way, the forEach container children are still rendered
  (instead of displaying an empty container). [ build 234, 9/5/07]


* Updated AeProcessDefToWebStateModelVisitor::visit(AeActivityForEachDef) to
  handle case for 1 interation [ build 235, 9/7/07]


* fix for defect 3200 - AeNewAttachmentUploader now uses AeMimeUtils to
  resolve an uploaded file mime type and does not rely on commons-upload
  library. [ build 236, 9/7/07]


* Updated AeProcessDefToWebStateModelVisitor::setState(..) method to only set
  default (in-active) state iff the bpel object is an non-actity type object
  (i.e. skip variables, partnerlinks etc.). Related defect - 3198. [ build
  237, 9/10/07]


* Fixed problem with help link broken for processview pages since they are
  located under a nested directory path from main level [ build 238, 9/11/07]


* rename to AeNotUnderstoodExtensionActivityDef [ build 239, 9/11/07]


* Added css .filebrowse entry to control the width of the attachment file
  location field in the admin console popup window
  processview_attachment_add.jsp [ build 240, 9/12/07]


* avoid setting state on bpel object if its already been set [ build 241,
  9/13/07]


* Updated AeProcessDefToWebStateModelVisitor to not build 'current state'
  property for correlationSet, correlationSets and copy object (since they do
  not have state). Related defect 3198. [ build 242, 9/17/07]

org.activebpel.rt.bpel

* (1), added function validator for each attachment function (13 in total) for
  static analysis; (2) added function validators for standard bpel functions:
  getVaraibleData, getVaraibleProperty, getLinkStatus, and get doXSLTansform;
  (3), updated base expression validator to use function validator factory,
  updated validation context to get/set function factory; (4), Added function
  name to some function implementation for consistency. (5), Updated
  AeAbstractFunctionValidatorFactory to include all attachment validator and
  validators for standard bpel functions for both bpws and wsbpel. [ build
  619, 6/29/07]


* Fix a bundle key message for getMyRolePprperty function. [ build 620,
  7/3/07]


* 1) added URIResolver to AeDoXslTransformFunction so includes/imports are
  resolved using the resource catalog 2) fixed message.properties for
  AeAbstractExpressionRunner.ExpressionFailedError - pattern had wrong offsets
  [ build 621, 7/5/07]


* merged from branch: 1) added
  IAeBusinessProcessEngine.getCustomManagerNames() 2) made non-callback
  variants of queueInvokeData and queueInvokeFault final in
  AeBusinessProcessEngine. Subclasses should override variant that takes
  callback arg to change behavior 3) fixed toString() formatting in
  AePartnerLinkOpImplKey [ build 622, 7/9/07]


* Refactored xpath-related util methods out of AeXmlUtil and into a new class
  called AeXPathUtil. [ build 623, 7/12/07]


* Queue receive data change - if the message is one-way and a reply receiver
  is included in the context, reply immediately to it. [ build 624, 7/24/07]


* Fixed issue where cloning and restoring of variables was not handling
  attachments correctly. [ build 625, 7/26/07]


* Add engine support for adding and removing attachments to an existing
  process during remote debug or from the BpelAdmin console. [ build 626,
  7/26/07]


* New AeWSDLPolicyHelper with utility methods to help resolve and merge the
  policy references for the various WSDL Subjects as defined in the WS-Policy
  Attachment spec for WSDL 1.1. [ build 627, 7/27/07]


* Added new Monitor Listener infrastructure in engine to allow for
  subcriptions to monitor events. Added monitor event signaling for selected
  monitor properties. [ build 628, 7/30/07]


* Change signature of
  AeBusinessProcessEngine#dispatchReceiveData(AeMessageReceiver,
  AeInboundReceive, long, boolean) to dispatchReceiveData(long aProcessId, int
  aLocationId, AeInboundReceive, long, boolean) since we use the message
  receiver only to get the process id and location id. [ build 629, 7/31/07]


* 1) removed ack/nack callback from matchesInvoke sig, wasn't being used 2)
  message and variable deserializer uses XMLType for deserialization instead
  of QName. This handles derived simple types better. (Defect 3016) [ build
  630, 8/1/07]


* 1) added IAeengineConfiguration.getInEntryByPath(String,int) as a
  convenience method for getting int from config [ build 631, 8/6/07]


* Added ability to get/set engine monitoring status on engine. [ build 632,
  8/9/07]


* 1) bpws to ws-bpel converters were removing variable defs for <catch> and
  <onEvent> since they are inlined. This was causing a problem if there were
  multiple references to that variable in the process. Changed to leave the
  old variable in place and let static analysis report if it's not used. 2)
  removed AeVariablesDef.removeVariableDef(def) since it was no longer being
  called. [ build 633, 8/13/07]


* 1) New expression functions AeCreateAttachmentFunction and
  AeBase64EncodeFunction. 2) Added static validations
  'AeCreateAttachmentFunctionValidator and AeBase64EncodeFunctionValidator.
  3)Added functions to AeExtensionFunctionContext [ build 634, 8/16/07]


* 1) Added some error logging to wsi invoke handler base 2) Added a type
  conversion step to the to-query variable context so that variable values are
  properly converted to java objects compatible with Jaxen [ build 635,
  8/29/07]


* AeBase64EncodeFunctionValidator now allows an expression parameter as well
  as String literal [ build 636, 8/29/07]


* 1) organized function exception messages under package
  org.activebpel.rt.bpel.impl.function. 2) Added EXPECT_STRING_ARGUMENT and
  EXPECT_POSITIVE_INT_ARGUMENT exception messages. 3)Add new optional fourth
  argument to createAttachment expression funtion to allow externally defined
  Content-Id 5) moved expression function name to AeAbstractBpelFuntion, added
  constructor that receives the FUNCTION_NAME together with getFunctionName ,
  setFunctionName methods. 6) created getStringArg and getPositiveIntArg
  methods in AeAbstractBpel Function that validate expression function
  argument types. 6) Refractored all extpression functions to use
  getStringArg, getPositiveIntArg where applicable. 7) Refractored all
  expression functions (except test functions) to support FUNCTION_NAME by
  replacing the constructor to super(FUNCTION_NAME) [ build 637, 9/4/07]


* Updated AeWSIInvokeHandlerBase::invokeOperation() not to log
  InvocationTargetException to the console. (the target error is rethrown as a
  fault anyway) [ build 638, 9/7/07]


* 1) renamed AeUnknownExtensionActivityDef to
  AeNotUnderstoodExtensionActivityDef and added base class and impl for
  understood extension. This had an impact on a number of visitor interfaces
  but it's just a simple rename. I didn't add any logic yet for understood
  extensions [ build 639, 9/11/07]


* 1) change to AeRestoreCompInfoVisitor in order to read scope locations by
  path instead of id in order to fix issue with restoring previously executed
  onEvent scope instances [ build 640, 9/19/07]

org.activebpel.rt.bpeladmin.help.war

* ActiveBPEL Engine (in Designer product) ready for 4.1 launch [ build 20,
  9/11/07]

org.activebpel.rt.xmldb

* Created new project that is the base for all XML database implementations
  (Tamino, eXist currently). [ build 1, 8/16/07]


* Created a base project for all xml database implementations. This base
  project is the foundation that any implementation of our Enterprise
  persistence layer which is based on an XML database (Tamino, eXist) can use.
  [ build 2, 8/16/07]


* Fixed a problem where the order by was being added after the return in Query
  Builders (no one was using order by until now). Added a query response
  result handler that simply returns the list of Elements as-is (for
  debugging). [ build 3, 8/23/07]


* Implementation of new method (removeAttachment). [ build 4, 8/27/07]


* Fixed a bug in the xmldb project - a connection was not being used properly
  in storeAttachment(). [ build 5, 9/12/07]

org.activebpel.rt.axis.bpel.web

* On the Admin console's engine configuration panel for the in-memory
  activeBPEL server, the "Replace existing resources on deployment" checkBox
  is now set to be uncheck by default. This was done for consistency with the
  designer and other engine flavors. This change was made in
  aeEngineConfig-ActiveBPEL.xml [ build 77, 8/28/07]

org.activebpel.rt.bpel.ext.expr

* Remove checkBpelFunctionUsage() from Xquery expression validator for both
  bpws and wsbpel. Method function is included in other updates. [ build 28,
  6/29/07]


* Added support in the Saxon -> Java expression result handler for text
  results. If the XQuery is something like "/path/to/text()", then the typed
  expression result was not properly handling the result. [ build 29, 8/21/07]

org.activebpel.rt.axis.bpel.admin

* New API version 4.1 interface adds addAttachment and removeAttachments
  methods. IAeActiveBpelAdmin now extends IAeAxisActiveBpelAdmin that is now
  the interface generated by axis from the ActiveBpelAdmin.wsdl, Added new
  generated classes for the data types supporting these new methods. [ build
  4, 7/26/07]


* 1) merged IAeAxisActiveBpelAdmin back into IAeActiveBpelAdmin [ build 5,
  8/9/07]

org.activebpel.rt.bpel.server

* Removed sql attachment storage provider instance from sql queue storage
  provider - it was not being used. [ build 478, 6/29/07]


* Updated AeDeploymentValidator to add functionValidatorFacotry to validation
  context. [ build 479, 6/29/07]


* 1) small change to AeProcessDeployment to simplify subclassing in test
  project [ build 480, 7/5/07]


* merged from branch: 1) introduced AeAbstractServerEngine as base class for
  AeBpelEngine and AeRecoveryEngine. Processes with doXslTransform() calls
  with resources within the catalog can now be recovered. 2) override
  queueInvokeData and queueInvokeFault in AeRecoveryEngine in order to remove
  corresponding invokes that were recovered. This avoids having to execute the
  invoke again if its data was already dispatched to the recovered process 3)
  added removeRecoveredItem(int) to IAeRecoveredItemsSet to enable removal of
  item by locationId 4) AeRecoveryEngineFactory now passes the customManagers
  map into the recovery engine. 5) AeRecoveryQueueManager overrides
  removeMessageReceiversInGroup in order to remove a previously recovered
  message receiver. [ build 481, 7/9/07]


* Refactored xpath-related util methods out of AeXmlUtil and into a new class
  called AeXPathUtil. [ build 482, 7/12/07]


* Fixed a recovery bug where previously queued message and alarm receivers
  were not present in the recovery queue manager so recovering a correlated
  inbound receive would result in an unmatched request. [ build 483, 7/13/07]


* Fixed a problem with recovering one-way invokes. If the server crashes after
  transmitting the one-way invoke but before journalling the empty invoke data
  response, then the invoke cannot be recovered. I changed one-way invokes to
  be immediately executed during recovery if they were in an 'executing' state
  AND the 'journal_invoke_transmitted' journal entry existed (in other words,
  we journalled the fact that the invoke was already transmitted). Invoke Data
  Journal Entries are now no longer dispatched during recovery due to the
  previous change. [ build 484, 7/26/07]


* Server side support for admin web service API version 4.2 that includes
  add/remove variable attachments. [ build 485, 7/26/07]


* Pervious checkin had a type. vErsiob is 4.1 not 4,2. Server side support for
  admin web service API version 4.2 that includes add/remove variable
  attachments. [ build 486, 7/26/07]


* The web service deployer now resolves policy references for myRole endpoints
  prior to deployment. [ build 487, 7/27/07]


* Added monitor notification event for process statistics. [ build 488,
  7/30/07]


* Implement Req186 - SC - Custom WorkManager Implementations: (1) add
  IAeWorkManagerFactory interface and a default implementation,
  AeDefaultWorkManagerFactory, that implements what used to be done in
  AeEngineFactory (JNDI lookup and fallback to default AeWorkManager); (2) add
  IAeInputMessageWork and IAeInputMessageWorkManager interfaces and a default
  implementation, AeDefaultInputMessageWorkManager; (3) modify
  AeEngineFactory#initializeWorkManager to construct and use work manager
  factory from class name specified in aeEngineConfig.xml; (4) add
  scheduleInputMessageWork(long aProcessId, IAeInputMessageWork) to
  AeEngineFactory; (5) modify AeDispatchReceiveRunnableHelper and
  AeProcessExecutionRunnableHelper in AeBpelEngine to be serializable and
  modify AeBpelEngine to dispatch these two kinds of work to
  AeEngineFactory.scheduleInputMessageWork(); (6) fix
  AeBpelEngine#doMultiStartCreateProcessWithMessage() to return process id for
  the non-create message, because this process id is used when reporting
  problems when a synchronous web service call times out. [ build 489,
  7/31/07]


* Added WS-I Basic Profile 1.1 binding and attachment message part to
  ActiveBpelAdmin.wsdl [ build 490, 8/1/07]


* Moved keystore utility methods out of AeCryptoUtil and into
  org.activebpel.rt.util.AeJCEUtil to make them easier to share with
  standalone clients. [ build 491, 8/2/07]


* Added method to get monitor status on engine admin interface [ build 492,
  8/9/07]


* implemented monitor event for time required to establish a database
  connection [ build 493, 8/13/07]


* Restore AeRecoveredAddInvokeItem.java to HEAD using command-line CVS. [
  build 494, 8/14/07]


* Added monitoring for work manager work start delay. [ build 495, 8/14/07]


* Modified engine detail to include MonitorStatus item needed during roll up
  of cluster monitor status [ build 496, 8/15/07]


* Fixed problem where we attempted to send work manager monitor event prior to
  engine startup. [ build 497, 8/16/07]


* Minor refactorings. [ build 498, 8/16/07]


* 1) added IAeDeploymentProvider.findService that looks for a deployed service
  with a given port type of operation implemented [ build 499, 9/2/07]


* 1) changed catch of SQLException in AeSQLTransaction to Throwable since it
  won't be a SQLException if its coming from a Proxy 2) left comment about
  double-check style syncrhonization in AeTransactionManager, will refactor
  later [ build 500, 9/7/07]


* Added isXslEntry() to AeResourceKey [ build 501, 9/12/07]


* Made some alterations to AeStorageConfig to address possible race conditions
  (since the DB statements are being loaded lazily, and we could get multiple
  threads trying to load them at once). [ build 502, 9/21/07]

ActiveBPEL engine v4.0 0 (20070628) 
 
org.activebpel.rt

* 1) Added the wsdl 1.1 schema to the standard schemas 2) added setAttribute()
  to AeXmlUtil 3) renamed setQNameAttribute to setAttributeQName 4) Cleaned up
  the .classpath file a bit [ build 369, 4/3/07]


* 1) added "xml" to AeSampleDataPreferences as preferred prefix for xml
  namespace [ build 370, 4/4/07]


* Add method getMapEntry(String aName, boolean aCreateFlag, Map aConfigEntry)
  to AeConfiguration to create an entry if it does not exist in the given base
  config Map. [ build 371, 4/12/07]


* Added getQName(Element) (similary to getText(Element)) to get an encoded
  QName from an element. [ build 372, 4/13/07]


* Update AeConfiguration method visibility for test in com.activee email
  service test. [ build 373, 4/19/07]


* Allow wsdl to reference schema through direct imported wsdl's schemas. [
  build 374, 4/23/07]


* attachment support [ build 375, 4/23/07]


* added IAeAttachmentContainer to AeEmptyMessage [ build 376, 4/24/07]


* eliminated null attachment containers [ build 377, 4/25/07]


* removed creation of AeMessageData.mAttachmentContainer in declaration since
  there's lazy instantiation in getter [ build 378, 4/25/07]


* In AeUtil added helper method notNullOrEmpty for QName arguments. [ build
  379, 4/26/07]


* Added a toSet() method to AeUtil that converts from a String array to a Set.
  [ build 380, 4/30/07]


* (1) Remove AeAttachmentGroup. (2) Change AeAttachmentContainer#set(int,
  Object) to not remove an object from the list--the decision instead is to
  set or not set the specified entry. (3) Remove obsolete members from
  IAeAttachmentContainer and IAeAttachmentItem. [ build 381, 5/1/07]


* 1) added capitalizeWord() to AeUtil - this method capitalizes the first
  letter in a String - useful for JavaBeansy type operations 2) Added some
  granularity to the IAeSampleDataPreferences in the form of two new interface
  methods: isCreateOptionalAttribute(QName) and isCreateOptionalElement(QName)
  [ build 382, 5/3/07]


* 1) AeXmlUtil.getElementType(QName) wasn't handling null namespace for
  element [ build 383, 5/4/07]


* (1) Add utility routines getTempDirectory(), listTempFiles(), and
  createTempFile(InputStream, String, String) to AeUtil. (2) Refactor
  AeBlobInputStream to use AeUtil#createTempFile(InputStream, String, String).
  (3) Add constructors to AeBlobInputStream to open a stream on a pre-existing
  file with or without automatically deleting the file upon stream close. (4)
  Remove IAeBlobInputStream interface. (5) Add synchObject() methods to
  AeLongMap and AeTypedSet to allow synchronization on the underlying
  collection (analogous to .NET collections). (6) Remove
  IAeAttachmentItem#setJournalToken(). (7) Rename
  IAeAttachmentItem#getJournalToken() to getAttachmentId(), because there is
  no journaling in in-memory configurations. [ build 384, 5/8/07]


* 1) refactored getDeclaredNamespaces in aexmlutil 2) added granularity to the
  sample data preferences, allowing getNumberOfRepeating* on elements and
  attributes based on QName [ build 385, 5/9/07]


* Fixed attachments for variables of type element, improced unit tests [ build
  386, 5/9/07]


* Added getText(Node, XPathStr, NSMap) method to AeXmlUtil to return node text
  identified by the xpath expression. [ build 387, 5/9/07]


* Added a File c'tor to the jar reader util. [ build 388, 5/10/07]


* Moved AeSOAPElementUtil utility class to this project from
  org.activebpel.rt.bpel to minimize required libs needed by
  TenantConfigurator [ build 389, 5/11/07]


* Added an addText() method to aexmlutil which creates a child text node of a
  given element. [ build 390, 5/15/07]


* Added AeXmlUtil::isNil(...) method to return true if element is xsi:Nil or
  null. [ build 391, 5/15/07]


* Added ws-bpel_serviceref.xsd to the standard schemas. Fixed some location
  problems with existing standard schema entries. [ build 392, 5/17/07]


* Added IAeAttachmentProvider interface [ build 393, 5/20/07]


* New class util AeMimeUtil with method to support handling of mime headers
  and filename derived from these headers [ build 394, 5/21/07]


* Small refactor: removed redundant method createChildElementWithText() - it
  duplicates the functionality of addElementNS() in the same class. [ build
  395, 5/23/07]


* Modified AeMimeUtil to add support of obtaining mime types from a filename
  spec. [ build 396, 5/23/07]


* (1) Modify AeEmptyMessage to clone its attachment container; (2) Modify
  AeMessageData to create a non-null attachment container only if the original
  has attachments; (3) Extend AeBlobInputStream from FileInputStream instead
  of FilterInputStream. [ build 397, 5/23/07]


* 1) added util method to AeXmlUtil for doing xsl transform [ build 398,
  5/23/07]


* Update AeAttachmentContainer: (1) extract body of add() to new method
  addIfAbsent(); (2) modify addAll() to call addIfAbsent() rather than add(),
  so that AeVariable$AeVariableAttachmentContainer#addAll() (next check-in)
  doesn't needlessly increment the version number for each new attachment; (3)
  add override of add(int, Object) for completeness. [ build 399, 5/24/07]


* 1) Added getExtension(aFilename) and splitFilePathAndName(String
  aAbsoluteFilePath) util methods to AeFileUtil.; 2) Updated AeMimeUtil to add
  overloaded method getContentType(aFilename,aDefaultType), and new method
  getContentTypeFromExtension(aExtension,aDefaultType) [ build 400, 5/24/07]


* Added output format property to doTransform() for xslt transformation. [
  build 401, 6/1/07]


* added soap1-1 xsd to standardSchemas.xml [ build 402, 6/4/07]


* Updated AeMimeUtil to add support for Content-Length header [ build 403,
  6/5/07]


* Refactor the code to move the messages from org.activebpel.rt to
  org.activebpel.rt.bpel projects. [ build 404, 6/7/07]


* 1) renamed/repackaged AevXmlGeneratorUtil to AeCastorSampleDataGenerator 2)
  added util AeCreateSampleMessage that creates sample data for a WSDL Message
  [ build 405, 6/7/07]


* Fixed issue where logic added to handle import of schemas from imported wsdl
  was not setting the input source location from the imported wsdl. [ build
  406, 6/8/07]


* Added support for unique Content-Id's for attachments by appending a '-#' to
  duplicate Content_id's, #-is incremented to support multiple duplicates [
  build 407, 6/8/07]


* Fixed problem with attachment container, which was preventing simulation of
  processes with attachments [ build 408, 6/11/07]


* Split out pure JCE functionality from AeCryptoUtil into AeJCEUtil so
  standalone clients can encrypt and decrypt without introducing dependencies
  on server-side classes. [ build 409, 6/12/07]


* 1) Fixed a bug with XML sample data generation where an extraneous empty
  element was being produced when generating a recursive element sample. 2)
  Modified XML sample data generation logic to not produce attributes of XSD
  type ID or IDREF. [ build 410, 6/12/07]


* Removed method serializeOtherHeaders from AeMimeUtil, as it is no longer
  used. [ build 411, 6/14/07]


* (1) Added method copyEntries(Map, Map) to AeConfiguration util to do a deep
  copy of config entry maps.; (2) Addef method toString(COllection, tokenChar)
  to AeUtils - returns a tokem delimited string [ build 412, 6/14/07]


* Added AE_SIZE_MIME to support attachment content length, Add common mime
  type <-> ext support [ build 413, 6/15/07]


* added some convenient xpath selection methods to AeXmlUtil [ build 414,
  6/15/07]


* The CreateSampleMessage class now produces data for simple types too. Added
  a context and a map of namespace decls to the SampleDataTarget. [ build 415,
  6/18/07]


* Moved code that matches a soap fault to a wsdl fault def from the axis
  invoke handler to a utility class called AeFaultMatcher so it can be shared
  with non-axis invoke handlers. [ build 416, 6/18/07]


* 1) added ability to get/set entry in AeConfiguration by path. This
  functionality existed in AeDiffConfiguration, pulled up into the base class
  [ build 417, 6/18/07]


* Fixed a defect with XML sample data generation wizard where the repeating
  elements preference was not working for Abstract Types and Elements. [ build
  418, 6/18/07]

org.activebpel.rt.axis.bpel

* attachment support [ build 199, 4/23/07]


* recheckin due to build failure [ build 200, 4/23/07]


* fixed ae.build.properties [ build 201, 4/23/07]


* Do over. Committed files from a different project.
  org.activebpel.rt.bpel.impl.AeDataConvert methods no longer throw
  AeAttachmentException, so we can simplify exception handling. [ build 202,
  5/1/07]


* Minor Javadoc cleanup. [ build 203, 5/23/07]


* Fixed Content-Id from being overriden by axis default, Check for valid
  attachment item type generates error: AeSOAPInvoker.ERROR_1=Invalid
  Attachment object. Expecting IAeWebServiceAttachmentItem. [ build 204,
  6/7/07]


* removed unnecessary import [ build 205, 6/7/07]


* Moved code that matches a soap fault to a wsdl fault def from the axis
  invoke handler to a utility class called AeFaultMatcher so it can be shared
  with non-axis invoke handlers. [ build 206, 6/18/07]

org.activebpel.rt.war

* New project for base classes, tags, and resources for ActiveBPEL console web
  apps. Contains the Active Endpoints tags library, console tab support,
  aetags.tld, ae.css, clear.gif, favicon.ico, and logo.gif. Unpack and repack
  with new resources to build web apps on top of the base support. [ build 2,
  4/24/07]


* Add qname.jar to ae.build.properties [ build 3, 4/24/07]


* Update aetags.tld. I checked in an older, obsolete version of aetags.tld
  when I created this project. [ build 4, 4/26/07]


* Enhanced AeIfPropertyMatches tag to support property compare in two beans [
  build 5, 4/27/07]


* Updated AeAbstractBeanPropertyTag::getPropertyFromBean(..) to return bean's
  toString() value if the property name is not specified. Useful if the bean
  itself represents string. [ build 6, 5/9/07]

org.activebpel.wsio

* null check in AeMessageContext::setServiceName() to prevent the exception
  from being thrown if the param to the setter is null [ build 31, 4/4/07]


* WSIO Attachment support this includes extensions to the webservice message
  data, attachment exception, and a webservice attachment item
  AeWebServiceAttachment [ build 32, 4/23/07]


* (1) Remove AeWsAttachmentException. (2) Remove
  IAeWebServiceMessageData#setAttachments(). (3) Remove throws
  AeWsAttachmentException from IAeInvoke#getInputMessageData(). [ build 33,
  5/1/07]


* Remove unnecessary no-arg constructor from AeWebServiceAttachment. [ build
  34, 5/23/07]

org.activebpel.rt.tamino

* Changes due to storage provider layer refactorings. [ build 58, 4/3/07]


* satisfy interfaces with attachment support [ build 59, 4/23/07]


* Propagate change to IAeQueueStorageProvider interface as part of moving
  associateProcess() call from AeQueueStorageProvider#journalInboundReceive()
  to AeQueueStorage#consumeMessageReceiverInternal(). [ build 60, 5/8/07]


* Remove associateAttachments() from IAeQueueStorageProvider and its
  implementations. [ build 61, 5/23/07]


* Changed base tamino code to make it easier to extend basic filtering for
  alaram and receive queue lists. [ build 62, 6/8/07]


ddl.org.activebpel

* Added a Tamino Schema merging XSLT stylesheet. This stylesheet will merge
  two Tamino schemas together. For example, this stylesheet is used to deploy
  the ActiveBPEL For People Tamino schema - it does this by taking the
  ActiveBPEL Open Source or ActiveBPEL Enterprise base Tamino DDL and merging
  in the ActiveBPEL for People DDL (which contains only the incremental
  element and doctype declarations needed for workflow). The resulting DDL is
  then deployed. [ build 42, 4/3/07]


* attachment support tables added for all SQL database DDLs database version
  update to 2.1.0.4 [ build 43, 4/25/07]


* Fix defect 2683, "The Tables AeProcessAttachement and AeProcess are not
  being created when you run the DB2 ddl." (I think it's actually
  AeProcessAttachment and AeAttachment.) [ build 44, 5/15/07]


* Patch scripts for ActiveBPEL database version 2.1.0.4. [ build 45, 5/24/07]

org.activebpel.rt.bpeladmin.war

* [Merge from ab_3_1_x] Move non-HTTP dependent parts of AeGraphImageServlet
  into a new class AeGraphImageDriver that can be reused for .NET to support
  tiling in the .NET product. Define an interface, IAeGraphImageResponse, for
  graph response functionality removed from HTTP response specifics. [ build
  208, 4/11/07]


* (1) Updated AeActiveBpelWarBundle to return string key "!key!" when key
  entry not foun. (Used throw error which ended in a 500 server error) (2)
  Added a simple iterator tag (<ae:CollectionIterator>) for
  java.util.Collection properties. (3) Updated AeAbstractAdminBean to keep
  track or error or status messages in a List instead of a single string
  concatanated with "<br> \n". [ build 209, 4/12/07]


* fixed typo in messages.properties, AevBundleKeyTest was failing [ build 210,
  4/13/07]


* 1) Cleaned up some of the AE tag classes for code-reuse (had few copy/paste
  code); 2) Updated some tags to extend AeAbstractBeanPropertyTag for code
  reuse; 3) Updated AeAbstractBeanPropertyTag to support dot chained method
  getters. Eg: <ae:IfTrue name="beanName" property="engineBean.status.running"
  /> is equivalent to getEngineBean().getStatus().isRunning().; 4) Updated
  AeGetResource tag to also be able to specify the war resource bundle key
  name indirectly via a key specified in the request object (e.g.
  <ae:GetResource attributeName="request_att_name" />) or from bean e.g.
  <ae:GetResource name="bean_name" property="errorMessageKey" />"; 5) Added
  new tag AeSetProperty - this is equivalent to jsp:SetProperty but also
  allows you to set a property based on another bean (e.g in http session).
  E.g. <ae:SetProperty name="beanName" property="methodname"
  fromName="fromBean" fromProperty="fromProperty" />; 6) Added new tag
  AeSetResource - allows one to set a war message resource bundle value on a
  bean. E.g. <ae:SetResource key="page_title" name="beanName"
  property="methodname" /> [ build 211, 4/23/07]


* Modify BpelAdmin project to be built over org.activebpel.rt.war base war:
  (1) remove resources now in base war (ae.css, aetags.tld, logo.gif,
  favicon.ico, clear.gif); (2) account for new location of console tabs
  support in JSP pages; (3) add aux.war.build to unpack base war and repack
  BpelAdmin.war; (4) modify .classpath and aebuild.properties to include base
  war classes. [ build 212, 4/24/07]


* Added BpelAdmin bean support for attachments and an attachment download
  servlet AeAttachmentDownloadServlet [ build 213, 5/8/07]


* Serialize attachment id as id attribute (instead of value attribute) and
  also serialize process id. [ build 214, 5/8/07]


* Refactored filter creation in process listing bean to make it easier to
  extend. [ build 215, 5/18/07]


* Refractored AeAttachmentViewBean to use AeMimeUtil [ build 216, 5/21/07]


* Update AeProcessViewBean to increase the process graph tiles from 250x250
  (too 'granular') to 500x500. [ build 217, 5/24/07]


* (1) Added people activity icon support for the admin console process graph;
  (2) Exposed process view graph image tile size as a property (via servlet
  config). The default image size is 1000px square.; (3) Defect - 2650 To copy
  operations that are an expression are not displaying on the admin console
  process graphs [ build 218, 6/11/07]


* Fixed problem where unable to download multipart mime attachments from
  BpelAdmin console [ build 219, 6/12/07]


* Modified admin console display of variables with attachments to provide a
  view consistent with the ActiveBPEL Designer process variables view [ build
  220, 6/14/07]


* Fixed processview_attachments.jsp to work with the WebLogic environment.
  Uses ae:GetProperty instead og jsp:getProperty [ build 221, 6/19/07]


* 1) added comment and extra line break to BpelAdmin.properties to avoid
  issues with concating (will look at the code that concats these files later)
  [ build 222, 6/20/07]


* 1) inserting line break between war resource bundle properties files when
  they're concatenated to avoid problems with missing trailing line breaks.
  (opting to change the code here instead of forcing all props files to have
  extra whitespace) 2) removed comment about having to keep a blank line in
  BpelAdmin.properties [ build 223, 6/22/07]

org.activebpel.rt.bpel

* Defect 2579 - modified AeServerProcessCoordination::activityFaulted(..) -
  Coordination framework should not double fault the enclosing scope(which
  could be the process) if the scope/process is already running its fault
  handlers. [ build 572, 4/3/07]


* Added the concept of "Custom Managers" in the engine config - this allows
  arbitrary managers to be added to the engine so that they can, among other
  things, participate in the engine lifecycle [ build 573, 4/3/07]


* 1) moved call to super.validate() to be first thing
  AeActivityInvokeValidator does since the super is required to init some
  member data 2) changed the context of the link's transition condition
  execution to be the src activity 3) expression return values are converted
  from nodes to strings when calculating a deadline or duration 4)
  AeAbstractBpelFunction was mistakenly using the parent of the bpel object to
  resolve vars instead of the bpel object itself [ build 574, 4/4/07]


* added some getMapEntry methods onto IAeUpdatableEngineConfig [ build 575,
  4/20/07]


* Major changes and additions for attachment support done here [ build 576,
  4/23/07]


* Rename AeBusinessProcessEngine#dispatchReceiveData(long, int,
  AeInboundReceive, long) to
  AeBusinessProcessEngine#internalDispatchReceiveData(long, int,
  AeInboundReceive, long) and remove
  AeBpelEngine#internalDispatchReceiveData(long, int, AeInboundReceive, long)
  which is identical. We could declare internalDispatchReceiveData() final,
  because dispatchReceiveData(AeMessageReceiver, AeInboundReceive, long,
  boolean) is the overridable method with overrides in AeBpelEngine and
  AeClusterBpelEngine. [ build 577, 4/24/07]


* handle null attachment containers and no-op copy operations correctly [
  build 578, 4/25/07]


* AeCopyOperationBase avoids executing "to" strategy if "from" returned null
  and the ignoreMissingFromData flag is set [ build 579, 4/25/07]


* (1) Change signatures of IAeAttachmentManager methods to throw
  AeBusinessProcessException instead of AeAttachmentException to simplify
  exception handling wherever an attachment manager is used. (2) Remove
  AeTokenizedAttachmentItem#getContent()--attachment streams will come from
  the attachment manager. (3) Move template implementations of
  associateProcess() and bpel2wsio to AeAbstractAttachmentManager. (4) Modify
  AeInvoke to throw an exception when the invoke is queued if there is a
  problem accessing attachments. [ build 580, 5/1/07]


* Moved the code that sets the wsa:IsReferenceParameter attribute from the
  2005 endpoint deserializer to the partner addressing layer. [ build 581,
  5/3/07]


* 1) pulled adding/removing function contexts from versioning config up to
  IAeUpdateableEngineConfig 2) check for null element namespace in
  AeReplaceElementStrategy to avoid invalid QName 3) fixed typo in
  message.properties key in AeDoXslTransformFunction [ build 582, 5/4/07]


* AeVariableSerializer now add the variable type,element or messagetype as an
  attribute of the root 'variable' element [ build 583, 5/8/07]


* (1) Move and rename
  org.activebpel.rt.bpel.attachment.AeTokenizedAttachmentItem to
  org.activebpel.rt.bpel.impl.attachment.AeStoredAttachmentItem. (2) Add
  IAeProcessPurgedListener for listeners to be notified when a process manager
  purges a completed process from memory. (3) Add
  addProcessPurgedListener(IAeProcessPurgedListener) and
  removeProcessPurgedListener(IAeProcessPurgedListener) to IAeProcessManager.
  (4) Move IAeAttachmentStorage interface from org.activebpel.rt.bpel.server
  project to here, so that we can implement AeFileAttachmentStorage for
  in-memory and simulation configurations. (5) Rename
  AeInMemoryAttachmentManager to AeFileAttachmentManager and refactor to (6)
  Move bulk of attachment manager implementation from
  AePersistentAttachmentManager and AeFileAttachmentManager to shared
  AeAbstractAttachmentManager. (7) Add AeAbstractProcessManager containing
  shared process purged listener implementation. (8) Move config utility
  routines from AePersistentProcessManager to AeAbstractProcessManager. (9)
  Modify AeInMemoryProcessManager to publish process purged events and to
  configure completed process count from aeEngineConfig.xml. (10) Serialize
  attachment id as id attribute (instead of value attribute) and also
  serialize process id. [ build 584, 5/8/07]


* 1) added added abs:processName() custom function which returns the name of
  the currently executing process 2) added a new base class for wsi style
  custom invoke handlers [ build 585, 5/9/07]


* fixed handling of a variable of type element. wrap and unwrap with a
  'value'tag [ build 586, 5/9/07]


* Moved AeSOAPElementUtil utility class from this project from
  org.activebpel.rt to minimize required libs needed by TenantConfigurator [
  build 587, 5/11/07]


* Added ProcessGroup and HideSystemGroup options to process filter. [ build
  588, 5/18/07]


* 1) renamed IAeURNAddressResolver to IAeURNResolver and repackaged to rt.bpel
  for future use by custom functions 2) added IAeURNResolve to
  IAeBusinessProcessEngineInternal, also for custom function useage 3) fixed
  issue where non-createInstance IMA's weren't getting their attachments
  associated with the process 4) AeVariable now clones/restores attachment
  container 5) fixed issue where element style wsio variables weren't getting
  their attachments populated 6) added base class for attachment some
  functions 7) changed signature for getVariableAttachmentType() from
  accepting attachment object to accepting varname and item number [ build
  589, 5/21/07]


* 1) Small refactor: removed redundant method createChildElementWithText() -
  it duplicates the functionality of addElementNS() in the same class. 2)
  Modified the functionality of the copyAllVariableAttachments() extension
  function - it now takes a list of variables names as the 1st param, rather
  than just a single variable name. [ build 590, 5/23/07]


* 1) Added expression analysis support to detect usage of attachment modifying
  ABX functions used in expressions. 2) Modified AeBusinessProcess to return
  IAeVariable instead of just the data. This makes it more useful in detecting
  changes to attachments. [ build 591, 5/23/07]


* Add support for attachments to non-persistent processes: (1) defer storing
  attachments for a message until we know the process plan; (2) notify
  attachment manager when it's safe to discard attachments for a
  non-persistent process after the engine has sent the response for the
  process; (3) maintain a reference count on an attachment file in the
  file-based attachment storage to delete the file when the last stream closes
  or the process is purged. [ build 592, 5/23/07]


* 1) uses AeXmlUtil's transform method [ build 593, 5/23/07]


* Add inner class AeVariableAttachmentContainer to AeVariable:
  AeVariableAttachmentContainer extends AeAttachmentContainer to increment a
  variable's version number if the attachment container is modified. [ build
  594, 5/24/07]


* Remove FIXME from AeVariable [ build 595, 5/24/07]


* Added the two get*Attachment* functions to the list of functions returned by
  the expression analyzer so that the analyzer's getVariables() method returns
  the variables used in those functions. [ build 596, 5/25/07]


* Fixed problem with AeVariableDeserializer causing problems during
  simulation, where variables were incorrectly being set to an unitialized
  state [ build 597, 5/29/07]


* 1) fixed defects 2754 and 2769. 2) updating variable data from user/ui
  preserves attachments. 3) AeCopyAllVariableAttachmentsFunction returns the
  actual count of attachments copied instead of the number of attachments of
  the target. [ build 598, 5/31/07]


* Updated and added new class to resolve the URN mapping for XSL file. This
  provides a layer of indirection between the process and the xsl resource
  used to format the message. [ build 599, 6/1/07]


* 1) AeActivityScopeImpl wasn't checking for an executing termination handler
  in isScopeOkToComplete. Found as part of terminating a subprocess since the
  coordination is cancelled which causes the scope to check to see if it can
  complete. [ build 600, 6/6/07]


* rolling back change in scope activity since an offline test is failing, need
  to debug before keeping change [ build 601, 6/6/07]


* Added new visitor to detect if a partner link is acually being used in an
  invoke operation. [ build 602, 6/6/07]


* Refactor the code to move the messages from org.activebpel.rt to
  org.activebpel.rt.bpel projects. [ build 603, 6/7/07]


* 1) New attachment expression function getAttachmentProperty. 2) Removed
  'Variable' from tha names of all attachment functions. 3) addAttachment
  renamed to copyAttachment. 4) For functions copyAttachment and
  replaceAttachment the item object parameter have been replaced by a
  VariableName and attachment itemNumber. 5) All attchment functions now use
  itemNumber's that start with 1 instead of 0. [ build 604, 6/7/07]


* Added implicit copy of attachments from the first part and only the first
  part of a message. [ build 605, 6/7/07]


* 1) restoring termination handler check in AeActivityScopeImpl. The failing
  tests were likely due to OutOfMemory errors and other eclipse problems.
  After restarting and doing a clean I cannot recreate failures [ build 606,
  6/7/07]


* Fixed problem where no warning was generated for missing imports in WS-BPEL
  2.0, becuase they were in a deployment descriptor. The user is now warned
  that this may not be portable. [ build 607, 6/8/07]


* Fixed copy from message part strategy to copy attchments only for the first
  message part for invokes and onmessage. From part copy for assign has been
  removed. [ build 608, 6/8/07]


* Moved expression language constants from factory classes to IAeBPELConsants.
  [ build 609, 6/10/07]


* Updated AeDiffEngineConfiguration class to use copyEntries(Map, Map) method
  in AeConfigurationUtil (method was moved from AeDiffEngineConfiguration to
  the AeConfigurationUtil) [ build 610, 6/14/07]


* Added supprot for getAttachmentSize, Fixed widlcard varibles for
  copyAllAttachments, added wildcard support for removeAllAttachmentts [ build
  611, 6/15/07]


* 1) pulled code for setting values by path up from AeDiffEngineConfiguration
  to AeConfiguration 2) added getter/setter for path on config interfaces [
  build 612, 6/18/07]


* Fixed problem where NullPointerException encountered if workflow plugin not
  installed and B4P process is opened. [ build 613, 6/19/07]


* 1) added AeAbstractBpelObject.triggerFaultHandler(fault) as conv call to
  (surprise) trigger fault handling. This replaced previous calls of
  setFault(fault) followed by startTermination() 2) changed some of the
  synchronized blocks in AeServerProcessCoordination to synch on the process
  and not the scope. Also added missing synch blocks 3) fixed issue in
  AeServerProcessCoordination where faulted subprocess wasn't propagating
  fault correctly to calling process. Calling processes faultHandler wasn't
  executed since it was at the process level at the call in
  AeServerProcessCoordination was objectCompletedWithFault(fault). Changed to
  call new triggerFault(fault) method which allows for fault handling. [ build
  614, 6/19/07]


* For defect 2861, "Server deadlocking when onAlarms exceed the number of
  available work manager threads," add new configuration entry constants to
  IAeEngineConfiguration. [ build 615, 6/20/07]


* Fixed recovery issue where inbound receives that use engine managed
  correlation were not adding the conversation id property to the correlation
  map when deserializing from a journal entry. [ build 616, 6/22/07]


* 1) added getAttachmentFunctionList() to IAeExpressionParseResult 2) added
  IAeExpressionParseResult to IAeExpressionValidationResult in lieu of
  exposing more pass-through methods 3) fixed code in
  AeAbstractExpressionParseResult.getVarAttachmentList() to account for new
  method signatures on attachment functions 4) changed constants in
  AeExpressionLanguageUtil to match function names, removed unnecessary
  constants 5) changed AeAbstractExpressionValidator to add parse result to
  validation object 6) AeBaseExpressionValidator resolves all variable
  references in expression which will mark variables in attachments functions
  as being used. [ build 617, 6/22/07]

org.activebpel.rt.bpeladmin.help.war

* V4.0 Administration Console Help for ActiveBPEL Designer Development Server.
  Ready for product launch. [ build 19, 6/20/07]

org.activebpel.rt.axis.bpel.web

* Comment change in engine config .xsl file. [ build 71, 4/3/07]


* attachments need axis 1.4 [ build 72, 4/23/07]


* changed config for active bpel in-memory to use the in-memory attachment
  manager [ build 73, 4/24/07]


* Rename AeInMemoryAttachmentManager to AeFileAttachmentManager in engine
  config files. [ build 74, 5/8/07]


* 1) name change for urn resolver in config file [ build 75, 5/21/07]


* Add config entries for Alarm child work manager to
  aeEngineConfig-ActiveBPEL.xml. [ build 76, 6/20/07]

org.activebpel.rt.bpel.ext.expr

* 1) unwrap saxon's object wrapper before returning value so our custom
  function will see IAeAttachmentItem [ build 26, 5/21/07]


* Moved expression language constants from factory classes to IAeBPELConsants.
  [ build 27, 6/10/07]

org.activebpel.rt.bpel.server

* 1) Added the concept of "Custom Managers" in the engine config - this allows
  arbitrary managers to be added to the engine so that they can, among other
  things, participate in the engine lifecycle 2) Added the concept of a
  'custom storage' and 'custom provider' so that named storage objects can be
  specified in the engine config. this allows them to utilize the storage
  framework we have in place AND they can leverage the provider framework
  (data source, etc...) [ build 450, 4/3/07]


* Couple of minor javadoc changes. [ build 451, 4/13/07]


* Added call to set active engine for any custom managers which are registered
  [ build 452, 4/13/07]


* 1) added AeDeploymentUtil which is used by managers to deploy bpr's when
  they start up 2) removed ae:localhost from AePartnerAddressing's init of
  myRole epr. The initial value of a myRole epr will be the myRole's
  serviceName from the pdd. This will change when the partnerLink receives a
  message. [ build 453, 4/20/07]


* Attachment support including storage of attachments to SQL databases and
  process invoke support [ build 454, 4/23/07]


* Modified AeDeploymentUtil to add ability to deploy WSR files. [ build 455,
  4/23/07]


* Rename AeBusinessProcessEngine#dispatchReceiveData(long, int,
  AeInboundReceive, long) to
  AeBusinessProcessEngine#internalDispatchReceiveData(long, int,
  AeInboundReceive, long) and remove
  AeBpelEngine#internalDispatchReceiveData(long, int, AeInboundReceive, long)
  which is identical. We could declare internalDispatchReceiveData() final,
  because dispatchReceiveData(AeMessageReceiver, AeInboundReceive, long,
  boolean) is the overridable method with overrides in AeBpelEngine and
  AeClusterBpelEngine. [ build 456, 4/24/07]


* Fixed problem getting NPE while creating Web Service Response [ build 457,
  4/24/07]


* handle null attachment container [ build 458, 4/25/07]


* (1) Remove unnecessary catch clauses due to redeclared IAeAttachmentManager
  exceptions. (2) Modify storeAttachment() in IAeAttachmentStorage and
  IAeAttachmentStorageProvider to accept input stream and headers instead of
  IAeWebServiceAttachment. (3) Remove associateProcess(long, long,
  java.sql.Connection) from IAeAttachmentStorageProvider. (4) Modify
  AeResultSetHandlers.sBlobStreamHandler to always read database stream
  completely with AeBlobInputStream, because there is no guarantee that the
  contents will be available once the result set, statement, or database
  connection is closed. [ build 459, 5/1/07]


* 1. Moved code to set the wsa:IsReferenceParameter attribute from the 2005
  endpoint deserializer to the partner addressing layer 2. deployWebService in
  AeDeploymentUtil needed to include a parent classloader when creating the
  loader for the wsr. [ build 460, 5/3/07]


* (1) Fix defect 2632, "Getting an error on CleanupAttachments when attempting
  to start ActiveBPEL Enterprise using Oracle" (as well as DB2). (2) Move
  associateProcess() call from AeQueueStorageProvider#journalInboundReceive()
  to AeQueueStorage#consumeMessageReceiverInternal(). (3) Move
  IAeAttachmentStorage interface from here to org.activebpel.rt.bpel project.
  (4) Move bulk of attachment manager implementation from
  AePersistentAttachmentManager to shared AeAbstractAttachmentManager. (5)
  Propagate IAeProcessManager interface changes. (6) Move
  AeAttachmentItemResultSetHandler from
  org.activebpel.rt.bpel.server.engine.storage.sql to
  org.activebpel.rt.bpel.server.engine.storage.sql.handlers. [ build 461,
  5/8/07]


* Javadoc. [ build 462, 5/10/07]


* Add a hasMapping() check in addServiceNamesFromWsdlRefs() - when the service
  names are being pulled from all of the wsdl references, non-local references
  are now skipped. This is necessary when deploying a BPR that refers to a
  WSDL that is deployed in some other BPR. [ build 463, 5/17/07]


* Added process group option to pdd information. [ build 464, 5/18/07]


* 1) changes related to repackaging URN resolver 2) pre-deployment validator
  was mistakenly treating a pick's onMessages as individual IMA's and
  therefore rejecting the process as a non-persistent process [ build 465,
  5/21/07]


* Add support for attachments to non-persistent processes: (1) implement a
  composite attachment storage in AePersistentAttachmentManager that chooses
  between local files or persistent database depending on the process
  persistence; and (2) implement process purged notification in
  AePersistentProcessManager. Also, (3) fix AeProcessInvokeHandler to clean up
  attachment streams after queuing the message to the engine; and (4) remove
  associateAttachments() from IAeQueueStorageProvider and its implementations.
  [ build 466, 5/23/07]


* Fix for defects 2754 2769. remote call now returns an emty string instead of
  null [ build 467, 5/31/07]


* Updated AeBpelEngine for URN mapping to resolve the XSL file location. [
  build 468, 6/1/07]


* Modified partner link deployment validator to create a validation error if a
  partner link is defined in BPEL process but not in PDD if it is actually
  being used in an invoke operation. Otherwise we continue to log a warning as
  we have done in the past. [ build 469, 6/6/07]


* Added getStringOrSqlNullVarcharNoEmpty to AeSQLObject. [ build 470, 6/10/07]


* Split out pure JCE functionality from AeCryptoUtil into AeJCEUtil so
  standalone clients can encrypt and decrypt without introducing dependencies
  on server-side classes. [ build 471, 6/12/07]


* Check for AeBlobInputStream to avoid reading the content stream a second
  time for content size calculation [ build 472, 6/15/07]


* AeCoordinationManager doesn't propagate process-completed message to
  coordinators if the process that completed was a subprocess since this
  process should remain in the compensatable state until its parent completes
  [ build 473, 6/15/07]


* Removed some redundant code from the process invoke handler that was
  updating context addressing twice. [ build 474, 6/18/07]


* Added callback from the participant to the coordination manager when the
  participant receives a close() message. The callback allows the coordination
  manager to check for any related coordinators for the same coordination id
  and propagate the close message to them as well. This is necessary for
  nested subprocesses (i.e. A->B->-C so that when A completes, B and C will
  both transition from compensatable to completed) [ build 475, 6/19/07]


* Fix defect 2861, "Server deadlocking when onAlarms exceed the number of
  available work manager threads," by scheduling the work to dispatch an alarm
  through a child work manager that never schedules more than 5 (or other
  configurable number) work items through the parent work manager. In other
  words, at most 5 work manager threads at a time are dispatching alarms. [
  build 476, 6/20/07]

ActiveBPEL engine v3.1 0 (20070330) 
 
org.activebpel.rt.axis

* Updated AeCatalogHelper::getCatalogSchema() to check if catalog item detail
  is null. [ build 64, 3/6/07]


* Fixed problem resolving imports which have spaces in their name. [ build 65,
  3/20/07]

ddl.org.activebpel

* 1) fixed a column type (DeadlineMillis) in the informix DDL (from INT to
  INT8). 2) fixed a missing ; in the sql server DDL [ build 40, 3/1/07]


* Add missing changes to patch 2.1.0.3 for DB2, MySQL, and SQL Server: (1)
  remove unused AeQueuedReceiveByMatchHash index in all databases to match an
  optimization we did to Oracle earlier; and (2) add QueuedReceivedId to
  AeQueuedReceiveByCorrelateHash index in some databases to optimize execution
  plan. [ build 41, 3/21/07]

org.activebpel.rt

* 1) For sample data generation added a null check in AeSampleDataTarget when
  we're building the list of compatible elements for user selection. 2) Fixed
  a bug in AeCastorStructureFactory's handleElementName method where we were
  figuring out the element's namespace. [ build 351, 3/2/07]


* 1) changes to AeXmlUtil.copyNodeContents() to fix issues with namespace
  declarations that can crop up when the DOM gets serialized under JRE 1.4 2)
  replaced AeSampleDataVisitor that encoded QNames with AeXmlUtil code [ build
  352, 3/2/07]


* 1) removed call to removeChild() in AeXmlUtil.copyNodeContents since it
  causes failures in Axis' DOMImpl 2) simplified
  AeCastorStructureFactory.createAttributeModel() to use AeSchemaUtil method
  to determine ns for attr [ build 353, 3/5/07]


* 1) added IAeSampleDataPreferences.isCreateOptionalElements, must have been
  removed during previous round of refactoring 2) AeSampleDataVisitor checks
  prefs to see if optional element should be created 3) sample data prefs
  repeating element prefs exceed maxOccurs then Math.max(1, minOccurs) is used
  instead of just minOccurs (which may be zero) [ build 354, 3/6/07]


* For sample data generation, changed the default generate nillable element
  contents flag from false to true. [ build 355, 3/6/07]


* Updated to add log4j.jar to plugin runtime dependency. CentrasSite plugin
  requires this dependency. This resolves the one of the classpath issue when
  integrating CentraSite in designer. [ build 356, 3/7/07]


* In the class AeSampleDataTarget added a validation check when adding target
  ElementDecls to the list of top-level elements for selection for sample data
  generation. This check makes sure that the ElementDecl defines a valid
  XMLType or references a valid XMLType. [ build 357, 3/8/07]


* 1) AeBPELExtendedWSDLDef uses standard schema resolver if none is set and a
  schema needs to get parsed 2) broke out complex type and element filtering
  from AeSampleDataTarget to top level classes and interfaces 3) fixed issue
  with AeSampleDataVisitor where ClassCastException was happening if a choice
  element had an <any> in it [ build 359, 3/9/07]


* Added new util method getQName() and writeNode() [ build 360, 3/12/07]


* 1) renamed AeXmlUtil.getQName to getQNameAttribute to match other getter
  names 2) changed AeXmlUtil.setQNameAttribute to use encodeQName method 3)
  overloaded IAeMutableNamespaceContext to add flag to allow default namespace
  usage. This flag should be false if you're looking for namespaces to encode
  a QName as an attr or element value [ build 361, 3/14/07]


* 1) Refactored the class AeAcceptAllComplexElements to
  AeAcceptAllGlobalElements and modified the accept method to return true for
  top-level elements of SimpleType as well as ComplexType. 2) Added well known
  namespace prefixes to the preferred prefix/namespace map for sample data
  preferences class. [ build 362, 3/15/07]


* 1) checking in change from ew: AeXmlUtil.removeDuplicateNSDecls 2) changed
  exception in AeXmlUtil.selectNodes() to include jaxen exception in
  stacktrace 3) fixed bug in AeXmlUtil.setNamespacePrefixUris where it wasn't
  iteratoring over the whole map to add ns declarations [ build 363, 3/16/07]


* 1) added jdom.jar to plugin.xml. This jar is needed by the CentraSite
  plugin. It is invoked by the jaxen library so it needs to be packaged with
  jaxen. 2) fixed bug in AeAcceptAllCompatibleElements where element type was
  assumed to be complex [ build 364, 3/19/07]


* Changed UrlDecoder call to use UTF8Util method instead of duplicating code.
  [ build 365, 3/20/07]


* 1) added null check to AeSampleDataVisitor.makeComment 2) fixed issue in
  AeSampleDataVisitor with visiting an element with an abstract type in the
  scenario where the type has no concrete types to create (caused by
  incomplete schema or by a recursion stopper preventing us from traversing
  into the children any further) [ build 366, 3/22/07]


* Added overloaded method loadConfig(org.w3c.Document) to the
  AeConfigurationUtil (in addtion to the method which takes in a Reader) [
  build 367, 3/26/07]


* Added touchXmlNodes() methods to AeXmlUtil to touch each DOM node and all of
  its children. [ build 368, 3/29/07]

org.activebpel.rt.axis.bpel

* Fix for defect 2473 where you get an NPE if you use an inbound
  authentication policy on a partner role [ build 198, 3/8/07]

org.activebpel.rt.bpeladmin.war

* (1) Changes to AeProcessViewBase - Set the initial value of a deployed
  process id to -1 instead of 0 since zero indicates the first deployed
  process index in Active-BPEL. (defect 2475); (2) Added new tag
  AeStringPropertySetterTag to set form data properties including empty string
  values (which is not supported by jsp:setProperty method) [ build 206,
  3/2/07]


* (1) Refactoring: moved method escapeSingleQuotes(String) from
  AeProcessViewUtil to the more common class AeWebUtil; (2) Defect 2488:
  Updated AeMessageReceiverDetailWrapper::getCorrelationData() to return data
  via escapeSingleQuotes (otherwise, unescaped quotes would case JS errors
  during JS function calls); (3) Updated message_rec_queue.jsp to use
  ae_winutil.js to open the partner details window, centered around the parent
  window; (4) Updated message_rec_queue.jsp to display correlation data in a
  <textarea/>. [ build 207, 3/6/07]

org.activebpel.rt.identity

* (1) Added AeIdentityServiceConfiguration to wrap service configuration
  details similar to AeEnginConfig; (2) Added Search and service provider
  level exceptions with error codes; (3) Refactored common AeLDIF* classnames
  to AeLdap* classnames; (4) Updated schema as well as removed
  tExtensibleField from identity schema; (5) Added identity service wsdl [
  build 4, 3/26/07]

org.activebpel.rt.bpel

* 1) fixed link validation code to catch links illegally crossing boundaries
  (while, comp handler, etc) 2) added new interface for defs that cannot have
  links cross their boundary 3) dom nodes for literal defs and extension defs
  get cloned to avoid i/o issues with ns decls 4) AeSOAPElementUtil wasn't
  traversing its parent nodes to find ns decls unless the element had a ns
  decl on it [ build 566, 3/2/07]


* 1) checking in fix for bpws to ws-bpel conversion dealing with
  expression language attrib 2) added checked for NPE in validation code
  (occurs when wsdl is missing for variable decls) [ build 567, 3/9/07]


* 1) changes related to IAeMutableNamespaceContext change [ build 568,
  3/14/07]


* 1) repackaged AeNamespaceFilteredWSDLIterator from rt.bpel.server 2)
  checking in change to AeWriterVisitor for ew [ build 569, 3/16/07]


* Fix for defect 2550 omega. Defect 2550 was actually a problem with the
  Tamino upgrade script. It was disputed because there were some problems
  completing existing processes AFTER the upgrade. The problems completing
  existing processes were not Tamino related. The problem is that some code
  was added for routing messages that relied on map lookups using
  AePartnerLinkDefKeys. However, when upgrading, the keys were being created
  with -1 as the partner link id (because old DBs wouldn't have the partner
  link id). Simple fix - change the hashCode() method to use the partner link
  name (which will always be right) instead of the partner link id. This
  increases the chance of map collisions, but not substantially for most
  processes (only for processes that have multiple partner links with the same
  name, which will be relatively rare). [ build 570, 3/22/07]


* Modified validation in AeAddressingHeaders to accept headers of type
  wsa:AttributedURIType with a value of empty string. [ build 571, 3/27/07]

org.activebpel.rt.tamino

* Fixed a problem in Tamino where exception thrown when committing a
  transaction would get dropped because a call to TConnection::close() in the
  finally block would also throw. [ build 57, 3/8/07]

org.activebpel.rt.bpeladmin.help.war

* Admin Console Help for ActiveBPEL Engine shipped with Designer ready for
  V3.1 [ build 18, 3/21/07]

org.activebpel.rt.bpel.server

* Defect 2492 related: Updated AeCatalog::getCatalogItemDetail() to return
  null if mapping does not exist (with out throwing NPE) [ build 446, 3/6/07]


* 1) repackaging of AeNamespaceFilteredWSDLIterator to rt.bpel [ build 447,
  3/16/07]


* Added pdd constant for effectiveDate attribute. [ build 448, 3/18/07]


* Update to AepartnerAddressing and AeProcessDeployment to ensure all policy
  elements added to partner link eprs are touched and detached. [ build 449,
  3/29/07]

ActiveBPEL engine v3.0.1 0 (20070108) 
 
org.activebpel.rt.axis

* Update .classpath entry for new Axis 1.4 source location [ build 61,
  12/20/06]

org.activebpel.rt

* Fixed a defect with the method getOrCreatePrefixForNamespace in the class
  AeBPELExtendedWSDLDef where an unnecessary prefix/namespace can be created
  within the definition when an appropriate one already exists within the
  current definition. [ build 332, 12/13/06]


* Added new AeSafelyViewableSet [ build 333, 12/14/06]


* Update IAeConstants and standardSchemas to include 2005 WSA Namespace [
  build 334, 12/20/06]


* In AeBPELExtenedWSDLDef removed code which was adding an extraneous bpel
  namespace definition to the WSDL def when adding a new property,
  propertyAlias or partner link type to the definition. [ build 335, 12/22/06]

org.activebpel.rt.axis.bpel

* Fixed problem getting NPE in AeInvokeHandler [ build 186, 12/14/06]


* invoke handler wasn't deserializing type based fault data correctly (faults
  are supposed to be elements but we have code to support types as well) [
  build 187, 12/14/06]


* 1. Update the AeWsaHeaderHandler to handle 2005 WSA namespace 2. Update
  AeRpcStyleInvoker and AeBreakpointHandlerStub to make sure the MEP and
  ReturnType is always set on call objects. Axis 1.4 throws an exception if
  parameters are set on a call without specifying a return type. 3. Removed
  redundant setting of transmission id on AeInvokeHandler. [ build 188,
  12/20/06]

org.activebpel.rt.bpeladmin.war

* Minor change to base config bean [ build 197, 12/14/06]


* Fixed problem where config update from cluster_tab was resetting config
  values on other tab pages. [ build 198, 1/4/07]


* Updated copyright to reflect 2007 and removed All rights reserved comment
  [ build 199, 1/4/07]


* Reverted changes on AeEngineConfigBean to fix issue with engine config tab
  not saving properly [ build 200, 1/5/07]

org.activebpel.rt.bpel

* Improved/updated several warning/error message text strings defined in
  messages.properties, per defects 2210 & 2359. [ build 538, 12/13/06]


* 1) change to link validator to display a warning if a link is not used
  rather than an error 2) bug fix in in-memory consumeMesageReceiver impl - it
  was consuming only the matching message receiver rather than the matching
  receiver and all other receivers in its group (for picks) - this was causing
  a failure in the online unit tests when run against an in-memory config 3)
  invalid expression value fault now includes the expected type in the 'info'
  portion of the fault 4) refactored the copy strategy factory so that there
  are now two impls: bpws and wsbpel - the wsbpel impl differs with respect to
  xsi:nil support 5) fixed two bugs in state saving/restoration related to
  saving fault information during compensation handling [ build 539, 12/14/06]


* 1) added SA check for unreachable CH 2) added runtime error for empty string
  assignment (only applies to ws-bpel) 3) implemented create xpath feature for
  element and type based property aliases 4) SA for prop alias was using the
  wrong namespace context 5) SA for onMessage wasn't allowing empty-variable
  style onMessage 6) moved code for variable initialization from assignment
  <to> objects to IAeVariable interface 7) changed storage and processing of
  namespaces in AeBaseDef to not require "xmlns:" as prefix for all entries 8)
  SA code now reports errors using the actual def that contained the error
  instead of the first enclosing activity def [ build 540, 12/14/06]


* Corrected static analysis display text for create instance validation
  errors. The error logic was correct but the error message was misleading. [
  build 541, 12/18/06]


* 1. Added serializer/deserializer support for WS-Addressing headers and
  Endpoints defined in the 2005 namespace. 2. New extended wsa endpoint
  serializers/deserializers to handle changes in endpoint info model for 2005.
  3. Updated AeEndpointReference so that the fix for a signature processor bug
  we used for reference properties is also used for policy and extensibility
  elements since we may want/need to sign them at some point. [ build 542,
  12/20/06]


* Fixed issue where I had broken backward compatibility with pre-2.0 way of
  specifying user credentials on endpoint reference. [ build 543, 12/21/06]


* update earlier change so it runs under jdk1.4 as well as jdk1.5 [ build 544,
  12/21/06]


* 1) fixed issue where link cycles were reported for links within isolated
  scopes 2) AeCreateInstanceOperationVisitor was missing a visit for onEvent
  which could cause messages to avoid getting routed to running instances.
  Instead of routing, new process instances were created. 3) implicit scope
  visitor wasn't parenting the scope def correctly 4) changed
  AeDefVariableUsageVisitor to use the defs to resolve variables instead of
  the stack since the stack might not reflect the full anscestor hierarchy in
  cases where we're traversing from a compensate activity. [ build 545,
  12/22/06]


* 1) fixed problem with variable initialization in toParts introduced by
  refactoring back in build 1758 2) removed unused code from
  AeBusinessProcessEngine [ build 546, 1/2/07]


* Fix for defect 2367. We once again write out inlined scope defs for invokes
  whenever possible (regardless of the source XML). This is so that we are
  consistent with how we worked in 2.x. [ build 547, 1/2/07]

org.activebpel.rt.tamino

* Implemented the getTxCommitControlDBConnection() introduced for consuming
  message receivers. [ build 47, 12/14/06]

org.activebpel.rt.bpeladmin.help.war

* Updated copyright notice [ build 16, 1/3/07]

org.activebpel.rt.axis.bpel.web

* Updated the .classpath to fix the Axis source path. [ build 63, 12/14/06]


* Update .classpath to point to Axis 1.4 source location [ build 64, 12/20/06]

org.activebpel.rt.bpel.server

* 1) minor refactoring of subprocess invoke handler to make it easier to
  extend (used in the offline engine test code) 2) introduced
  getTxCommitControlDBConnection to the storage layer so that storage objects
  can participate in TX's 3) fixed persistent hole in queue storage -
  consumeMessageReceiver now does its work within a Transaction so that the
  ack callback participates in the same Tx as the message consume [ build 420,
  12/14/06]


* 1) replaced "pid" with "process id" in error messages 2) slight refactoring
  in building wsdd 3) changed "wsdl key" to "resource key" in some comments [
  build 421, 12/14/06]


* Update AeSQLCounterStore to report first exception if database retry loop
  ultimately fails (like other retry loops we have updated recently); update
  AeProcessStateWriter retry loops to look more like retry loops elsewhere in
  the system. [ build 422, 12/15/06]


* Added support for the 2005 wsa namespace in pdd validation. [ build 423,
  12/20/06]

ActiveBPEL engine v3.0.0 0 (20061212) 
 
ddl.org.activebpel

* Fix defect 2352, "Slow performance with Oracle after a long load test," by
  adding a new AeProcess index and modifying an AeQueuedReceive index to
  optimize the GetCorrelatedReceives query. [ build 35, 11/30/06]

org.activebpel.rt

* Fixed equals method on AeSchemaDateTime to check the type before doing a
  further comparison. [ build 327, 11/1/06]


* (1) Defect 2105 updated AeWSDLPrefixes to return default NS prefix for
  abstract processes [ build 328, 11/3/06]


* Added an xml util method "findDefaultNamespace" used to get the in-scope
  default namespace for an Element. [ build 329, 11/4/06]


* 1) added isZero() to AeSchemaDuration [ build 330, 11/6/06]


* Added entry point for xml compare utility to take in to xml documents as
  strings to compare. [ build 331, 11/13/06]

org.activebpel.rt.axis.bpel

* 1. Moved code to create abx:conversationId header from AeInvokeHandler to
  AePartnerAddressing 2. Added new methods to AeBpelHandler for resolving
  partner link defs, myrole endpoints, and service QName from the SOAPService.
  3. Refactored AeBpelHandler.initServiceDesc() to use new methods [ build
  179, 11/3/06]


* Fix of problem loading external WSDL for deployed services [ build 180,
  11/6/06]


* New AeWsaHeaderHandler that marks ws-addressing headers as processed for the
  must-understand checker. Added the new handler to the global request &
  response chains in client and server wsdd files. [ build 181, 11/7/06]


* Fix bug 2214, modify the serialize() to write the documentElement to the
  aContext directly instead of using the transformer. It is very important to
  enforce setWriteXMLType(null) to make sure the xsi:type attribute is
  properly serialized. [ build 182, 11/7/06]


* Refactored the AeAxisObjectProxyFactory to provide overloaded methods for
  getMessageContextProxy and getSOAPHeaderProxy that take the class object as
  an argument to avoid classloader issues on some Tomcat installations.
  Refactored the AeWsaHeaderHandler so it only proxies the SOAPHeader object
  if really necessary. Removed the WSA Header handler from the global service
  request chain. [ build 183, 11/9/06]


* Fixed problem introduced by resource catalog upgrade in 3.0 where pdd
  refernces to external wsdl services were not being found or used by the
  invoke handler. [ build 184, 11/10/06]


* Changed log message when failure occurs during invoke to include the
  operation name which failed. [ build 185, 11/20/06]

org.activebpel.rt.bpeladmin.war

* (1) Updated code to display message exhanges only if it exists; (2) Added
  Admin Console support for concurrent OnEvent and OnAlarm [ build 189,
  11/3/06]


* 1) changed check for isOneWay to use the consumer message parts map of the
  invoke. This was previously unavailable since the defs weren't preprocessed
  with a WSDLProvider but PJ has since changed that. [ build 190, 11/6/06]


* Defect 2256 - show variable element, message or xsd type when viewing a
  variable properties. [ build 191, 11/8/06]


* Fixed a todo - admin console variable (process graph) properties: the
  variable type (element|message|type) QName was displayed as {uri}:localName.
  This has been changed to display prefix:localName along with the ns URI
  (type namespace) as a new property. [ build 192, 11/9/06]


* (a) Defect 2280 AeProcessViewBase: included changes per KR to log Throwable
  errors to console in AeProcessViewBase. Added methods to access process plan
  based on active process or deployed process details view mode; the active
  process plan is based on the QName and process Id; (b) AeProcessViewBean -
  Updated error message that is displayed when the location path is incorrect
  to display the location path as part of the error message. [ build 193,
  11/13/06]


* Uncommented init-params in web.xml (and added maxmemory
  param). [ build 194, 11/14/06]


* (1) Defect 2294 - displaying of message exchanges for bpws 1.1 processes (2)
  Defect 2293 - change "variable access serialiable" property label to read
  "Isolate" for wsbpel processes [ build 195, 11/14/06]


* added ignoreMissingFromData to copy op in admin console [ build 196,
  11/16/06]

org.activebpel.rt.bpel

* Added validation code for imports to check that the type uri is a valid
  absolute uri. [ build 507, 11/1/06]


* 1) fixed numerous issues with concurrency for onEvents (mostly state saving)
  but left onEvent as synchronous until PJ checks in the fixes for the admin
  console 2) left a few comments for things I need to fix before we release 3)
  changed message producer contract to return clone of message data as opposed
  to live variable [ build 508, 11/2/06]


* 1) Added some explicit construction of container defs (partners, partner
  links, links, etc) due to legacy problem with location id creation 2)
  properly skipping the creation of location paths for query def and literal
  def in BPEL 1.1 processes (since these defs do not really exist in a BPEL
  1.1 process) [ build 509, 11/2/06]


* Added additional static analysis check for onAlarm activities within in
  WS-BPEL process. Namely the validator (AeWSBPELOnAlarmValidator) is now
  checking for a required Scope child for onAlarm activities that are defined
  within an event handler. [ build 510, 11/2/06]


* (1) Added process validate for abstract processes to check for required
  abstractProcessProfile attribute; (2) Refactored message exchange visitor
  into two visitors - one implicit visitor and one createInstance entry point
  visitor; (3) Updated base AeAbstractDefPathSegmentVisitor to assign paths to
  message exchanges (bpws impl overrides to not to assign path); (5) Defect
  2219 update process save state visitor and process snapshot visitor to save
  fault hander variables; (6) Enabled the concurrency flag in AeOnEvent [
  build 511, 11/3/06]


* Removed a workaround for determining proper source namespace from
  AeAddressingHeaders that is no longer necessary [ build 512, 11/3/06]


* 1) Added some convenience methods on AeBaseDef to get/set/remove the xmlns
  default namespace decl 2) Added a new conversion visitor that adds a
  potentially missing scope def as the child of an onAlarm in an event handler
  3) Modified the def output layer to be capable of generating prefixed XML
  rather than using a default bpws/bpel namespace (the default is now
  prefixed) [ build 513, 11/4/06]


* (1) Defect 2139; (2) added makeNewFault to AeFaultFactory to clone a fault
  with rethrowable and suspendable flag sets; (3) Updated base reply receiver
  class to use the rethrowable (makeNewFault) fault for onFault callback [
  build 514, 11/6/06]


* Fix of problem loading external WSDL for deployed services [ build 515,
  11/6/06]


* 1) added support for concurrent handling of onAlarm's with repeatEvery 2)
  some refactorings to enable better code sharing between concurrent onEvent
  and onAlarm impls [ build 516, 11/6/06]


* Defect 2248 - when opaque activity def is validated, call super.validate to
  build the target links for validation [ build 517, 11/6/06]


* Merged change for 2.1.2 to fix problem restoring deadpath source link
  status. [ build 518, 11/7/06]


* (1) Add support for journaling pending invokes to fix defect 1191, "Pending
  invokes are not completing after the cluster cleanup delay." (2) Add
  isRunning() method to IAeBusinessProcessEngineInternal and its
  implementations. [ build 519, 11/8/06]


* 1) added format for generic process info events 2) use generic process info
  event for invoke retries, invalid state transitions, and unmatched requests
  3) fixed issue in AeActivityCompensateDef where it wasn't checking for its
  nesting properly 4) added more static analysis for isolated scopes 5)
  changed onEvent scope to init its plink data in ready-to-execute stage [
  build 520, 11/8/06]


* (1) Defect 1558 - updated AeProcessCompensationCallbackWrapper to set the
  process state to faulted (instead of completed) if the process instance
  compensation handler was terminated; (2) In AeReplyReceiverBase - removed
  IAeCoordinating.WSCOORD_ID entry from Business process properties. This was
  previously done in the subclass AeQueuingReplyReceiver, now moved to the
  base [ build 521, 11/9/06]


* Added a protected getter on AeProcessDef that is used only by a unit test. [
  build 522, 11/9/06]


* 1) fixed issue with ambiguousReceive 2) added ae:ambiguousReceive as a
  custom fault to send back to services that send us an ambiguousReceive [
  build 523, 11/9/06]


* Fix defect 2263, "Compensation handlers for isolated scopes are not
  acquiring locks for compensation." [ build 524, 11/9/06]


* Fix defect 2277, "Getting class cast exception when running process level
  compensation." (Yes, I forgot to run the online unit tests last night.) [
  build 525, 11/10/06]


* 1) Additional validation of literals (xsi:schemaLocation) 2) changes some
  validation warnings to errors 3) slightly improved error handling/logging
  during validation [ build 526, 11/13/06]


* 1) added error message for failure during process level variable
  initialization 2) added process info event for process level variable
  initialization failure [ build 527, 11/13/06]


* Fixed recently added constructor for process events which was improperly
  assigning event ids to the process id, which showed up in remote debug
  events. [ build 528, 11/13/06]


* (1) Defect 2294 related - admin console code requires bpws 1.1 processes's
  message exchanges to have location paths; (2) Added
  AeBPWSMessageExchangeDefPathSegmentVisitor to assign paths for bpws 1.1
  process message exhanges (currently used by admin console); (3) Added
  AeDefNullPathVisitor to assign paths for defs which do not already have
  location paths assigned; (4) Added ctor AeDefPathVisitor to take the init
  nextLocationId as a param. [ build 529, 11/14/06]


* rolling back previous change of adding number patterns for PID and EventID
  in eventFormat.properties due to a few events being fired without these
  values and causing errors in the console. Will return after release to track
  down which events are firing without PIDs or EventIds. [ build 530,
  11/14/06]


* Fix defect 2317, "Getting a warning 'Process <num>: completed recovery with
  1 journal entry remaining' when an invoke fails and you restart," by
  overriding setFaultedState() in addition to setState() in
  AeActivityInvokeImpl in order to remove the pending invoke journal entry. [
  build 531, 11/16/06]


* 1) Issue R1 keepSrcElement behavior for virtual <assign>. Virtual copy
  operations for fromPart/toPart use keepSrcElementName behavior 2) Issue R29
  Partner link's initializePartnerRole attribute. Changed attribute to be a
  tri-state bool with default being unset. Added static analysis check for
  attribute on plinks that don't have a partnerRoe. Converter no longer sets
  attribute since its not required. 3) R33 Optional XML Data in Assignments.
  Added ignoreMissingFromData to copy operation. [ build 532, 11/16/06]


* Removed warning message about unmatched request as we already log an info
  event with the process about the fact that a request for the process doesn't
  match any current waiting requests. [ build 533, 11/20/06]


* 1) Modified call to AeBusinessProcessEngine.queueReceiveData to return the
  processId to give us more detailed info for logging. 2) Changed
  AeQueuingReplyReceiver to validate input arguments [ build 534, 11/20/06]


* add method setRecoveredTransmissionId(long) to IAeInvokeInternal and to
  impl. AeInvoke (queue obj) to set the transmission id during recovery. [
  build 535, 11/21/06]


* Added 'handledFault' attribute of the AeDefaultFaultHandler class to the
  process state document. [ build 536, 11/21/06]


* Fixed a bug in fault deserialization - the 'handled fault' was being
  deserialized before the 'fault'. Since they can sometimes be the same, the
  deserialization would fail due to incorrect order of operations (the fault
  must be deserialized before the handledFault, since the handledFault is only
  a reference to the fault). [ build 537, 11/27/06]

org.activebpel.rt.tamino

* Added some new code for executing Tamino upgrades. I have added some
  additional options in the Tamino Patch file format, such as support for
  "select-into" and "undefine-doctype". This basically makes it easier to
  write Tamino upgrade patches. [ build 45, 11/2/06]


* Remove obsolete process persistence methods and fields that were also
  removed from the org.activebpel.rt.bpel.server project. [ build 46, 11/8/06]

org.activebpel.rt.bpeladmin.help.war

* Final edits for ActiveBPEL engine Admin Console Help for V3 launch [ build
  15, 11/20/06]

org.activebpel.rt.axis.bpel.web

* Update the version of the DTD in web.xml from 2.2 to 2.3 [ build 62,
  11/10/06]

org.activebpel.rt.bpel.server

* Fixed problem where undeploying BPR's in ActiveBPEL engine would leave
  behind WSDL resources. [ build 399, 11/3/06]


* (1) Updated AePddValidator to check for duplicate my role service names [
  build 400, 11/3/06]


* 1. Creating the abx:conversationId header up front in AePartnerAddressing
  when updating partner endpoints. 2. Fix issues in AePartnerAddressing with
  embedded wsa:Action headers in replyTo reference properties. [ build 401,
  11/3/06]


* (1) Defects 2139, 2250; (2) Updated queuing reply receiver class to use the
  rethrowable (makeNewFault) fault for onFault callback; (3) Update
  common-sql.xml to include LocationPath in the select clause for
  "CoordinationStorage.ListCoordinatorsForProcessId" and
  "CoordinationStorage.ListParticipantsForProcessId" queries. [ build 402,
  11/6/06]


* Fix of problem loading external WSDL for deployed services [ build 403,
  11/6/06]


* Defect 2256 - updated AeQueingReplyReceiver - to over-ride
  setBusinessProcessProperties to remove IAeCoordinating.WSCOORD_ID key from
  the properties [ build 404, 11/7/06]


* (1) Add support for journaling pending invokes to fix defect 1191, "Pending
  invokes are not completing after the cluster cleanup delay." (2) Add
  isRunning() method to IAeBusinessProcessEngineInternal and its
  implementations. (3) Fix defects 1527, "Getting an IllegalArgumentException
  when recovery is attempting to be done but the server is in the middle of
  shutting down," and 1475, "You cannot stop the ActiveBPEL engine while it is
  in the middle of recovery." [ build 405, 11/8/06]


* Changed AeQueuingReplyReceiver - moved removal of IAeCoordinating.WSCOORD_ID
  entry from Business process properties to the base class AeReplyReceiverBase
  [ build 406, 11/9/06]


* The AeMasterPolicyMapper will now include the WSA header handler in service
  request chains, rather than adding it to the global configuration since only
  BPEL processes actually handle WSA headers. [ build 407, 11/9/06]


* Changed updatePartnerLink in AeProcessDeployment so the partner endpoint is
  not initialized with WSA information if the message on the receive did not
  contain WSA information. [ build 408, 11/9/06]


* 1. Modified previous change to AeProcessDeployment.updatePartnerLink() to
  test for the presence of a wsa:ReplyTo header rather than the default action
  when determining whether to update the partner link with addressing headers
  that are mandatory for replies under wsa. 2. Fixed issue with creating
  AeMessageContext in AeProcessInvokeHandler where it was not setting up the
  inbound wsa headers properly and was updating the myRole endpoint with
  unwanted info from the invoker's partner role endpoint. [ build 409,
  11/10/06]


* Additional logging of errors during validation. [ build 410, 11/13/06]


* Eliminate extraneous warnings about unconsumed process journal entries when
  recovery completes process execution. [ build 411, 11/14/06]


* Defect 2268 - handle race condition in coordination where A completes before
  receiving B's COMPLETED signal. In this condition, A issues
  CANCEL_or_COMPLETE to B instead of just CANCEL. [ build 412, 11/15/06]


* Fixed issue with catalog event firing on replace entries when dependent on
  other files in deployment. [ build 413, 11/16/06]


* Changed AeQueuingReplyReceiver to validate input arguments [ build 414,
  11/20/06]


* KR code. Updated AeRecoveryEngine and AeRecoveryQueueManager to handle
  AeInvokeTansmittedJournalEntry's and set the recovered transmission id in
  the IAeInvokeInternal (queue obj) [ build 415, 11/21/06]


* Restore the coordination id for a subprocess invoke to the invoke's
  enclosing scope during recovery. [ build 416, 11/21/06]


* IAeProcessDeployment now caches the services to avoid db calls [ build 417,
  11/29/06]


* Display stack traces for the first exception as well as the last exception
  when the retry loops for saving a process or writing a journal entry fail. [
  build 418, 11/29/06]

org.activebpel.rt

* Added helper method to AeUtil to check for not null or empty collections. [
  build 319, 10/16/06]


* Added some QName definitions for several schema simple types. [ build 320,
  10/20/06]


* Fixed problem where imports of project relative resources with spaces in the
  project path were being URL encoded and causing problems during retrieval of
  resource [ build 321, 10/20/06]


* Modify AeXMLParserBase#loadDocumentFromString() not to try to parse an empty
  string, because the WebLogic 9.2 emits an error message to the log as well
  as throwing a parser exception. This was inspired by defect 2141, "I keep
  getting the error [Fatal Error] :-1:-1: Premature end of file. in my
  WebLogic log file running different tests." [ build 322, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  323, 10/25/06]


* Modified AeXMLParserBase.validateDocument() to always turn validation on and
  not rely on it being set, since we are calling validateDocument for the
  purpose of XML validation. [ build 324, 10/26/06]


* Updated to use new method isCompatibleSGElement() to prevent any confusion.
  [ build 325, 10/27/06]


* Simple javadoc change. [ build 326, 11/1/06]


* Fixed equals method on AeSchemaDateTime to check the type before doing a
  further comparison. [ build 327, 11/1/06]


* (1) Defect 2105 updated AeWSDLPrefixes to return default NS prefix for
  abstract processes [ build 328, 11/3/06]


* Added an xml util method "findDefaultNamespace" used to get the in-scope
  default namespace for an Element. [ build 329, 11/4/06]


* 1) added isZero() to AeSchemaDuration [ build 330, 11/6/06]


* Added entry point for xml compare utility to take in to xml documents as
  strings to compare. [ build 331, 11/13/06]

org.activebpel.rt.axis.bpel

* 1. Refactor AeBpelHandler.invokeProcessEngine to check for and create a
  durable reply receiver using information from incomming message context. 2.
  Refactor mapOutputData and mapFaultData methods such that they can be called
  from durable reply receivers. [ build 171, 10/17/06]


* [Merge from 2.1.1] In AeBprDeployment, never set the thread context
  classloader to null, because that may prevent JBoss 4.0.4 from loading
  org.apache.axis.deployment.wsdd.WSDDProvider leading to mysterious
  "Excetpion - java.lang.ExceptionInInitializerError" when generating WSDL or
  handling incoming SOAP messages. [ build 172, 10/18/06]


* Added timestamp param to breakpoint and event handler stubs. [ build 173,
  10/20/06]


* Fix defect 2141, "I keep getting the error [Fatal Error] :-1:-1: Premature
  end of file. in my WebLogic log file running different tests." [ build 174,
  10/24/06]


* Update AeBpelHandler so that synchronous replies contain all mandatory wsa
  reply headers. [ build 175, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  176, 10/25/06]


* Modify RPC encoded sterilizer and invoke handler to handle the RPC call
  between two processes when the message is complex type, also to allow
  messages with substitution group mechanism transfer in the PRC call, both
  for RPC encoded and RPC literal. [ build 177, 10/27/06]


* Use endpoint property, rather than constant to determine wsa namespace. [
  build 178, 10/31/06]


* 1. Moved code to create abx:conversationId header from AeInvokeHandler to
  AePartnerAddressing 2. Added new methods to AeBpelHandler for resolving
  partner link defs, myrole endpoints, and service QName from the SOAPService.
  3. Refactored AeBpelHandler.initServiceDesc() to use new methods [ build
  179, 11/3/06]


* Fix of problem loading external WSDL for deployed services [ build 180,
  11/6/06]


* New AeWsaHeaderHandler that marks ws-addressing headers as processed for the
  must-understand checker. Added the new handler to the global request &
  response chains in client and server wsdd files. [ build 181, 11/7/06]


* Fix bug 2214, modify the serialize() to write the documentElement to the
  aContext directly instead of using the transformer. It is very important to
  enforce setWriteXMLType(null) to make sure the xsi:type attribute is
  properly serialized. [ build 182, 11/7/06]


* Refactored the AeAxisObjectProxyFactory to provide overloaded methods for
  getMessageContextProxy and getSOAPHeaderProxy that take the class object as
  an argument to avoid classloader issues on some Tomcat installations.
  Refactored the AeWsaHeaderHandler so it only proxies the SOAPHeader object
  if really necessary. Removed the WSA Header handler from the global service
  request chain. [ build 183, 11/9/06]


* Fixed problem introduced by resource catalog upgrade in 3.0 where pdd
  refernces to external wsdl services were not being found or used by the
  invoke handler. [ build 184, 11/10/06]


* Changed log message when failure occurs during invoke to include the
  operation name which failed. [ build 185, 11/20/06]

org.activebpel.wsio

* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build 28,
  10/25/06]

org.activebpel.rt.tamino

* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build 44,
  10/25/06]


* Added some new code for executing Tamino upgrades. I have added some
  additional options in the Tamino Patch file format, such as support for
  "select-into" and "undefine-doctype". This basically makes it easier to
  write Tamino upgrade patches. [ build 45, 11/2/06]


* Remove obsolete process persistence methods and fields that were also
  removed from the org.activebpel.rt.bpel.server project. [ build 46, 11/8/06]

ddl.org.activebpel

* Fix defect 2352, "Slow performance with Oracle after a long load test," by
  adding a new AeProcess index and modifying an AeQueuedReceive index to
  optimize the GetCorrelatedReceives query. [ build 35, 11/30/06]

org.activebpel.rt.axis

* Fixed problem reading nested imported schema references for deployed WSDL
  services [ build 59, 10/20/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build 60,
  10/25/06]

org.activebpel.rt.bpeladmin.war

* Added (BPEL 1.1 only) text to the "auto create target path" and "disable
  selction fault" option labels. [ build 183, 10/20/06]


* (1) Defects 2154,2155 (2) Added "BPEL Namespace" property Process Properies
  in the Admin console; (3) Updated process view code to run def preprocessors
  (visitors) before building the visual model [ build 184, 10/24/06]


* Req 148 changes (1) added 'seconds' to time out labels; (2) remove 'path'
  from process properties (process view) [ build 185, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  186, 10/25/06]


* Defect 2198 - exit activity in admin console was displayed as terminated [
  build 187, 10/26/06]


* Added process level termination handler tab to graphical views of process. [
  build 188, 10/30/06]


* (1) Updated code to display message exhanges only if it exists; (2) Added
  Admin Console support for concurrent OnEvent and OnAlarm [ build 189,
  11/3/06]


* 1) changed check for isOneWay to use the consumer message parts map of the
  invoke. This was previously unavailable since the defs weren't preprocessed
  with a WSDLProvider but -- has since changed that. [ build 190, 11/6/06]


* Defect 2256 - show variable element, message or xsd type when viewing a
  variable properties. [ build 191, 11/8/06]


* Fixed a todo - admin console variable (process graph) properties: the
  variable type (element|message|type) QName was displayed as {uri}:localName.
  This has been changed to display prefix:localName along with the ns URI
  (type namespace) as a new property. [ build 192, 11/9/06]


* (a) Defect 2280 AeProcessViewBase: included changes to log Throwable
  errors to console in AeProcessViewBase. Added methods to access process plan
  based on active process or deployed process details view mode; the active
  process plan is based on the QName and process Id; (b) AeProcessViewBean -
  Updated error message that is displayed when the location path is incorrect
  to display the location path as part of the error message. [ build 193,
  11/13/06]


* Uncommented init-params in web.xml (and added maxmemory
  param). [ build 194, 11/14/06]


* (1) Defect 2294 - displaying of message exchanges for bpws 1.1 processes (2)
  Defect 2293 - change "variable access serialiable" property label to read
  "Isolate" for wsbpel processes [ build 195, 11/14/06]


* added ignoreMissingFromData to copy op in admin console [ build 196,
  11/16/06]

org.activebpel.rt.bpel

* (1) clarify any confusion for the fault handler, clean the fault handler
  strategy matrix and add more comments; (2) fixed the bug for catch order
  issue. Fault handler will always find the best match regardless the catch
  order. [ build 494, 10/17/06]


* (1) WS-BPEL treatment of open IMAs. (2) WS-BPEL treatment of the
  compensation handler of an isolated scope. (3) Re-implement link cycle
  detection: includes detecting cycles involving sequences and isolated
  scopes. (4) Remove IAeQueueManager#faultOutstandingReplies; this behavior is
  subsumed by WS-BPEL treatment of open IMAs, which sends faults to all open
  IMAs. (5) Move internally called methods from IAeBusinessProcess to
  IAeBusinessProcessInternal, so that IAeBusinessProcess defines exactly the
  interface required by the engine and the managers. (6) Move thread
  synchronization from AeExecutionQueue to AeBusinessProcess, only on
  IAeBusinessProcess methods. [ build 495, 10/18/06]


* 1) Some refactoring of engine/process events to share common base classes
  and to add a new base class (AeEvent) which adds a Timestamp to all events.
  2) The check start activity visitor now catches start activities within
  While, ForEach, and RepeatEvery loops [ build 496, 10/20/06]


* WSBPEL validation now logs an info message when extensions are in use. Fixed
  a bug in the xpath helper - the proper version of the xpath helper was not
  being returned by getInstance() [ build 497, 10/24/06]


* (1) Defects 2160, 2139, 2156; (2) Added assign-copy strategy for service-ref
  to wsa:epr element copying; (3) Updated AeExpressionLanguageFactory to
  support namespace aliases e.g. map bpel-abstract ns to bpel executable ns;
  (4) Added validator for opaque activity; (5) Update AeActivityInvokeImpl to
  reset transmission id on state change instead of onMessage/onFault callback
  to support retries; (6) Refactored AeWaitableReplyReceiver into
  AeReplyReceiverBase + AeWaitableReplyReceiver (AeQueueingReplyReceiver will
  now extend the base); (7) Enabled basic validation for abstract processes -
  this is currently based on the ws-bpel executable process validation (i.e.
  does not account for ##opaques). [ build 498, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  499, 10/25/06]


* 1) fixed issues with conflicting receives and scoped partner links 2)
  changed how messages are dispatched to receives/onMessag/onEvent in order to
  detect ambiguousReceives 3) added queuing scope to onEvent which is used to
  provide plink info during the queuing. This scope is also used to handle the
  messages until I turn concurrency back on [ build 500, 10/26/06]


* Fix AeProcessDef#findPartnerLink(AePartnerLinkDefKey) to handle partner link
  keys from upgraded 2.1.1 databases where the partnerLinkId will be -1. [
  build 501, 10/27/06]


* Project: org.activebpel.rt.bpel [ build 502, 10/27/06]


* Added ability for WS-BPEL 2.0 processes to use a process level termination
  handler and changed the extension for it and process level compensation to
  http://.../process_coordination. [ build 503, 10/30/06]


* Fixed problem where exceptions thrown from process/engine listeners were
  affecting process execution. [ build 504, 10/31/06]


* 1. Fix issue where the arguments of the abx:getMyRoleProperty function were
  not being validated. 2. Fix issue with cloning elements when adding to
  endpoint reference properties. 3. Removed unnecessary handling of actor and
  mustUnderstand in ws-addressing serializer. 4. Update inbound receive
  serializer/deserializer to use wsa namespace property on the endpoint,
  rather than a constant value for the 2003 namespace. [ build 505, 10/31/06]


* 1) Made endpoint refs cloneable 2) added static analysis for literals (must
  be a TII or EII) 3) all xpath query validation now considers namespaces
  during validation 4) invokes now clone their member data in case any of that
  data were to change while executing the invoke [ build 506, 11/1/06]


* Added validation code for imports to check that the type uri is a valid
  absolute uri. [ build 507, 11/1/06]


* 1) fixed numerous issues with concurrency for onEvents (mostly state saving)
  but left onEvent as synchronous until -- checks in the fixes for the admin
  console 2) left a few comments for things I need to fix before we release 3)
  changed message producer contract to return clone of message data as opposed
  to live variable [ build 508, 11/2/06]


* 1) Added some explicit construction of container defs (partners, partner
  links, links, etc) due to legacy problem with location id creation 2)
  properly skipping the creation of location paths for query def and literal
  def in BPEL 1.1 processes (since these defs do not really exist in a BPEL
  1.1 process) [ build 509, 11/2/06]


* Added additional static analysis check for onAlarm activities within in
  WS-BPEL process. Namely the validator (AeWSBPELOnAlarmValidator) is now
  checking for a required Scope child for onAlarm activities that are defined
  within an event handler. [ build 510, 11/2/06]


* (1) Added process validate for abstract processes to check for required
  abstractProcessProfile attribute; (2) Refactored message exchange visitor
  into two visitors - one implicit visitor and one createInstance entry point
  visitor; (3) Updated base AeAbstractDefPathSegmentVisitor to assign paths to
  message exchanges (bpws impl overrides to not to assign path); (5) Defect
  2219 update process save state visitor and process snapshot visitor to save
  fault hander variables; (6) Enabled the concurrency flag in AeOnEvent [
  build 511, 11/3/06]


* Removed a workaround for determining proper source namespace from
  AeAddressingHeaders that is no longer necessary [ build 512, 11/3/06]


* 1) Added some convenience methods on AeBaseDef to get/set/remove the xmlns
  default namespace decl 2) Added a new conversion visitor that adds a
  potentially missing scope def as the child of an onAlarm in an event handler
  3) Modified the def output layer to be capable of generating prefixed XML
  rather than using a default bpws/bpel namespace (the default is now
  prefixed) [ build 513, 11/4/06]


* (1) Defect 2139; (2) added makeNewFault to AeFaultFactory to clone a fault
  with rethrowable and suspendable flag sets; (3) Updated base reply receiver
  class to use the rethrowable (makeNewFault) fault for onFault callback [
  build 514, 11/6/06]


* Fix of problem loading external WSDL for deployed services [ build 515,
  11/6/06]


* 1) added support for concurrent handling of onAlarm's with repeatEvery 2)
  some refactorings to enable better code sharing between concurrent onEvent
  and onAlarm impls [ build 516, 11/6/06]


* Defect 2248 - when opaque activity def is validated, call super.validate to
  build the target links for validation [ build 517, 11/6/06]


* Merged change for 2.1.2 to fix problem restoring deadpath source link
  status. [ build 518, 11/7/06]


* (1) Add support for journaling pending invokes to fix defect 1191, "Pending
  invokes are not completing after the cluster cleanup delay." (2) Add
  isRunning() method to IAeBusinessProcessEngineInternal and its
  implementations. [ build 519, 11/8/06]


* 1) added format for generic process info events 2) use generic process info
  event for invoke retries, invalid state transitions, and unmatched requests
  3) fixed issue in AeActivityCompensateDef where it wasn't checking for its
  nesting properly 4) added more static analysis for isolated scopes 5)
  changed onEvent scope to init its plink data in ready-to-execute stage [
  build 520, 11/8/06]


* (1) Defect 1558 - updated AeProcessCompensationCallbackWrapper to set the
  process state to faulted (instead of completed) if the process instance
  compensation handler was terminated; (2) In AeReplyReceiverBase - removed
  IAeCoordinating.WSCOORD_ID entry from Business process properties. This was
  previously done in the subclass AeQueuingReplyReceiver, now moved to the
  base [ build 521, 11/9/06]


* Added a protected getter on AeProcessDef that is used only by a unit test. [
  build 522, 11/9/06]


* 1) fixed issue with ambiguousReceive 2) added ae:ambiguousReceive as a
  custom fault to send back to services that send us an ambiguousReceive [
  build 523, 11/9/06]


* Fix defect 2263, "Compensation handlers for isolated scopes are not
  acquiring locks for compensation." [ build 524, 11/9/06]


* Fix defect 2277, "Getting class cast exception when running process level
  compensation." (Yes, I forgot to run the online unit tests last night.) [
  build 525, 11/10/06]


* 1) Additional validation of literals (xsi:schemaLocation) 2) changes some
  validation warnings to errors 3) slightly improved error handling/logging
  during validation [ build 526, 11/13/06]


* 1) added error message for failure during process level variable
  initialization 2) added process info event for process level variable
  initialization failure [ build 527, 11/13/06]


* Fixed recently added constructor for process events which was improperly
  assigning event ids to the process id, which showed up in remote debug
  events. [ build 528, 11/13/06]


* (1) Defect 2294 related - admin console code requires bpws 1.1 processes's
  message exchanges to have location paths; (2) Added
  AeBPWSMessageExchangeDefPathSegmentVisitor to assign paths for bpws 1.1
  process message exhanges (currently used by admin console); (3) Added
  AeDefNullPathVisitor to assign paths for defs which do not already have
  location paths assigned; (4) Added ctor AeDefPathVisitor to take the init
  nextLocationId as a param. [ build 529, 11/14/06]


* rolling back previous change of adding number patterns for PID and EventID
  in eventFormat.properties due to a few events being fired without these
  values and causing errors in the console. Will return after release to track
  down which events are firing without PIDs or EventIds. [ build 530,
  11/14/06]


* Fix defect 2317, "Getting a warning 'Process <num>: completed recovery with
  1 journal entry remaining' when an invoke fails and you restart," by
  overriding setFaultedState() in addition to setState() in
  AeActivityInvokeImpl in order to remove the pending invoke journal entry. [
  build 531, 11/16/06]


* 1) Issue R1 keepSrcElement behavior for virtual <assign>. Virtual copy
  operations for fromPart/toPart use keepSrcElementName behavior 2) Issue R29
  Partner link's initializePartnerRole attribute. Changed attribute to be a
  tri-state bool with default being unset. Added static analysis check for
  attribute on plinks that don't have a partnerRole. Converter no longer sets
  attribute since its not required. 3) R33 Optional XML Data in Assignments.
  Added ignoreMissingFromData to copy operation. [ build 532, 11/16/06]


* Removed warning message about unmatched request as we already log an info
  event with the process about the fact that a request for the process doesn't
  match any current waiting requests. [ build 533, 11/20/06]


* 1) Modified call to AeBusinessProcessEngine.queueReceiveData to return the
  processId to give us more detailed info for logging. 2) Changed
  AeQueuingReplyReceiver to validate input arguments [ build 534, 11/20/06]


* add method setRecoveredTransmissionId(long) to IAeInvokeInternal and to
  impl. AeInvoke (queue obj) to set the transmission id during recovery. [
  build 535, 11/21/06]


* Added 'handledFault' attribute of the AeDefaultFaultHandler class to the
  process state document. [ build 536, 11/21/06]


* Fixed a bug in fault deserialization - the 'handled fault' was being
  deserialized before the 'fault'. Since they can sometimes be the same, the
  deserialization would fail due to incorrect order of operations (the fault
  must be deserialized before the handledFault, since the handledFault is only
  a reference to the fault). [ build 537, 11/27/06]

org.activebpel.rt.bpeladmin.help.war

* Final edits for ActiveBPEL engine Admin Console Help for V3 launch [ build
  15, 11/20/06]

org.activebpel.rt.axis.bpel.web

* Propagate interface and method name changes from org.activebpel.rt.bpel. [
  build 61, 10/18/06]


* Update the version of the DTD in web.xml from 2.2 to 2.3 [ build 62,
  11/10/06]

org.activebpel.rt.bpel.ext.expr

* Javadoc change. [ build 24, 11/1/06]


* Small refactoring in XQuery type mapper to use BigDecimal.valueOf() instead
  of new BigDecimal() [ build 25, 11/1/06]

org.activebpel.rt.bpel.ext.expr.bsf

* Javadoc change. [ build 11, 11/1/06]

org.activebpel.rt.bpel.server

* Update AeQueueStorage.findCorrelatedMatch() such that explicit correlation
  sets may be used in combination with engine managed correlation [ build 387,
  10/17/06]


* (1) Propagate IAeBusinessProcess and IAeQueueManager interface changes. (2)
  WS-BPEL treatment of open IMAs. [ build 388, 10/18/06]


* 1) Incremented the BPEL Admin version (due to the addition of timestamps on
  the event and breakpoint handlers) 2) Added timestamps to the breakpoing and
  event handler interfaces (and remote debug impl object) [ build 389,
  10/20/06]


* Refactoring of reply receivers - updated AeQueueingReplyReceiver to extend
  AeReplyReceiverBase [ build 390, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  391, 10/25/06]


* 1) minor changes in dispatching messages [ build 392, 10/26/06]


* Fixed a couple of issues with AeCatalog management of resources for
  ActiveBPEL product when deploying and undeploying BPR's with same
  locationHint of catalog entries. [ build 393, 10/26/06]


* Fixed problem where JUnit test was failing due to change from last build. [
  build 394, 10/26/06]


* (1) Fix transmission id deserialization in AeInvokeDataJournalEntry and
  AeInvokeFaultJournalEntry; (2) Remove partnerLinkId is null check from
  AeSQLQueueStorageProvider#readSQLMessageReceiver(), because the
  PartnerLinkId column is declared NOT NULL. [ build 395, 10/27/06]


* [Missed a file] (1) Fix transmission id deserialization in
  AeInvokeDataJournalEntry and AeInvokeFaultJournalEntry; (2) Remove
  partnerLinkId is null check from
  AeSQLQueueStorageProvider#readSQLMessageReceiver(), because the
  PartnerLinkId column is declared NOT NULL. [ build 396, 10/27/06]


* 1. Update pdd validation to support multiple wsa namespaces. 2. Fixed issue
  with wsa: headers embedded as reference properties within a reference
  property. [ build 397, 10/31/06]


* Properly roll back process state connection if an exception occurs when
  restoring process state. [ build 398, 11/1/06]


* Fixed problem where undeploying BPR's in ActiveBPEL engine would leave
  behind WSDL resources. [ build 399, 11/3/06]


* (1) Updated AePddValidator to check for duplicate my role service names [
  build 400, 11/3/06]


* 1. Creating the abx:conversationId header up front in AePartnerAddressing
  when updating partner endpoints. 2. Fix issues in AePartnerAddressing with
  embedded wsa:Action headers in replyTo reference properties. [ build 401,
  11/3/06]


* (1) Defects 2139, 2250; (2) Updated queuing reply receiver class to use the
  rethrowable (makeNewFault) fault for onFault callback; (3) Update
  common-sql.xml to include LocationPath in the select clause for
  "CoordinationStorage.ListCoordinatorsForProcessId" and
  "CoordinationStorage.ListParticipantsForProcessId" queries. [ build 402,
  11/6/06]


* Fix of problem loading external WSDL for deployed services [ build 403,
  11/6/06]


* Defect 2256 - updated AeQueingReplyReceiver - to over-ride
  setBusinessProcessProperties to remove IAeCoordinating.WSCOORD_ID key from
  the properties [ build 404, 11/7/06]


* (1) Add support for journaling pending invokes to fix defect 1191, "Pending
  invokes are not completing after the cluster cleanup delay." (2) Add
  isRunning() method to IAeBusinessProcessEngineInternal and its
  implementations. (3) Fix defects 1527, "Getting an IllegalArgumentException
  when recovery is attempting to be done but the server is in the middle of
  shutting down," and 1475, "You cannot stop the ActiveBPEL engine while it is
  in the middle of recovery." [ build 405, 11/8/06]


* Changed AeQueuingReplyReceiver - moved removal of IAeCoordinating.WSCOORD_ID
  entry from Business process properties to the base class AeReplyReceiverBase
  [ build 406, 11/9/06]


* The AeMasterPolicyMapper will now include the WSA header handler in service
  request chains, rather than adding it to the global configuration since only
  BPEL processes actually handle WSA headers. [ build 407, 11/9/06]


* Changed updatePartnerLink in AeProcessDeployment so the partner endpoint is
  not initialized with WSA information if the message on the receive did not
  contain WSA information. [ build 408, 11/9/06]


* 1. Modified previous change to AeProcessDeployment.updatePartnerLink() to
  test for the presence of a wsa:ReplyTo header rather than the default action
  when determining whether to update the partner link with addressing headers
  that are mandatory for replies under wsa. 2. Fixed issue with creating
  AeMessageContext in AeProcessInvokeHandler where it was not setting up the
  inbound wsa headers properly and was updating the myRole endpoint with
  unwanted info from the invoker's partner role endpoint. [ build 409,
  11/10/06]


* Additional logging of errors during validation. [ build 410, 11/13/06]


* Eliminate extraneous warnings about unconsumed process journal entries when
  recovery completes process execution. [ build 411, 11/14/06]


* Defect 2268 - handle race condition in coordination where A completes before
  receiving B's COMPLETED signal. In this condition, A issues
  CANCEL_or_COMPLETE to B instead of just CANCEL. [ build 412, 11/15/06]


* Fixed issue with catalog event firing on replace entries when dependent on
  other files in deployment. [ build 413, 11/16/06]


* Changed AeQueuingReplyReceiver to validate input arguments [ build 414,
  11/20/06]


* Updated AeRecoveryEngine and AeRecoveryQueueManager to handle
  AeInvokeTansmittedJournalEntry's and set the recovered transmission id in
  the IAeInvokeInternal (queue obj) [ build 415, 11/21/06]


* Restore the coordination id for a subprocess invoke to the invoke's
  enclosing scope during recovery. [ build 416, 11/21/06]


* IAeProcessDeployment now caches the services to avoid db calls [ build 417,
  11/29/06]


* Display stack traces for the first exception as well as the last exception
  when the retry loops for saving a process or writing a journal entry fail. [
  build 418, 11/29/06]


* Apply optimizer hint for "SELECT LocationId, VersionNumber FROM AeVariable
  WHERE ProcessId = ?" query when running on Oracle, because Oracle is very
  flakey about how it executes this query. This seems to solve very
  inconsistent performance results with Oracle, especially (for an unknown
  reason) running from JBoss. [ build 419, 12/4/06]

ActiveBPEL engine v3.0.0 0 (20061201) 
 
ddl.org.activebpel

* Fix defect 2352, "Slow performance with Oracle after a long load test," by
  adding a new AeProcess index and modifying an AeQueuedReceive index to
  optimize the GetCorrelatedReceives query. [ build 35, 11/30/06]

org.activebpel.rt

* Fixed equals method on AeSchemaDateTime to check the type before doing a
  further comparison. [ build 327, 11/1/06]


* (1) Defect 2105 updated AeWSDLPrefixes to return default NS prefix for
  abstract processes [ build 328, 11/3/06]


* Added an xml util method "findDefaultNamespace" used to get the in-scope
  default namespace for an Element. [ build 329, 11/4/06]


* 1) added isZero() to AeSchemaDuration [ build 330, 11/6/06]


* Added entry point for xml compare utility to take in to xml documents as
  strings to compare. [ build 331, 11/13/06]

org.activebpel.rt.axis.bpel

* 1. Moved code to create abx:conversationId header from AeInvokeHandler to
  AePartnerAddressing 2. Added new methods to AeBpelHandler for resolving
  partner link defs, myrole endpoints, and service QName from the SOAPService.
  3. Refactored AeBpelHandler.initServiceDesc() to use new methods [ build
  179, 11/3/06]


* Fix of problem loading external WSDL for deployed services [ build 180,
  11/6/06]


* New AeWsaHeaderHandler that marks ws-addressing headers as processed for the
  must-understand checker. Added the new handler to the global request &
  response chains in client and server wsdd files. [ build 181, 11/7/06]


* Fix bug 2214, modify the serialize() to write the documentElement to the
  aContext directly instead of using the transformer. It is very important to
  enforce setWriteXMLType(null) to make sure the xsi:type attribute is
  properly serialized. [ build 182, 11/7/06]


* Refactored the AeAxisObjectProxyFactory to provide overloaded methods for
  getMessageContextProxy and getSOAPHeaderProxy that take the class object as
  an argument to avoid classloader issues on some Tomcat installations.
  Refactored the AeWsaHeaderHandler so it only proxies the SOAPHeader object
  if really necessary. Removed the WSA Header handler from the global service
  request chain. [ build 183, 11/9/06]


* Fixed problem introduced by resource catalog upgrade in 3.0 where pdd
  refernces to external wsdl services were not being found or used by the
  invoke handler. [ build 184, 11/10/06]


* Changed log message when failure occurs during invoke to include the
  operation name which failed. [ build 185, 11/20/06]

org.activebpel.rt.bpeladmin.war

* (1) Updated code to display message exhanges only if it exists; (2) Added
  Admin Console support for concurrent OnEvent and OnAlarm [ build 189,
  11/3/06]


* 1) changed check for isOneWay to use the consumer message parts map of the
  invoke. This was previously unavailable since the defs weren't preprocessed
  with a WSDLProvider but PJ has since changed that. [ build 190, 11/6/06]


* Defect 2256 - show variable element, message or xsd type when viewing a
  variable properties. [ build 191, 11/8/06]


* Fixed a todo - admin console variable (process graph) properties: the
  variable type (element|message|type) QName was displayed as {uri}:localName.
  This has been changed to display prefix:localName along with the ns URI
  (type namespace) as a new property. [ build 192, 11/9/06]


* (a) Defect 2280 AeProcessViewBase: included changes per KR to log Throwable
  errors to console in AeProcessViewBase. Added methods to access process plan
  based on active process or deployed process details view mode; the active
  process plan is based on the QName and process Id; (b) AeProcessViewBean -
  Updated error message that is displayed when the location path is incorrect
  to display the location path as part of the error message. [ build 193,
  11/13/06]


* Uncommented init-params in web.xml (and added maxmemory
  param). [ build 194, 11/14/06]


* (1) Defect 2294 - displaying of message exchanges for bpws 1.1 processes (2)
  Defect 2293 - change "variable access serialiable" property label to read
  "Isolate" for wsbpel processes [ build 195, 11/14/06]


* added ignoreMissingFromData to copy op in admin console [ build 196,
  11/16/06]

org.activebpel.rt.bpel

* Added validation code for imports to check that the type uri is a valid
  absolute uri. [ build 507, 11/1/06]


* 1) fixed numerous issues with concurrency for onEvents (mostly state saving)
  but left onEvent as synchronous until PJ checks in the fixes for the admin
  console 2) left a few comments for things I need to fix before we release 3)
  changed message producer contract to return clone of message data as opposed
  to live variable [ build 508, 11/2/06]


* 1) Added some explicit construction of container defs (partners, partner
  links, links, etc) due to legacy problem with location id creation 2)
  properly skipping the creation of location paths for query def and literal
  def in BPEL 1.1 processes (since these defs do not really exist in a BPEL
  1.1 process) [ build 509, 11/2/06]


* Added additional static analysis check for onAlarm activities within in
  WS-BPEL process. Namely the validator (AeWSBPELOnAlarmValidator) is now
  checking for a required Scope child for onAlarm activities that are defined
  within an event handler. [ build 510, 11/2/06]


* (1) Added process validate for abstract processes to check for required
  abstractProcessProfile attribute; (2) Refactored message exchange visitor
  into two visitors - one implicit visitor and one createInstance entry point
  visitor; (3) Updated base AeAbstractDefPathSegmentVisitor to assign paths to
  message exchanges (bpws impl overrides to not to assign path); (5) Defect
  2219 update process save state visitor and process snapshot visitor to save
  fault hander variables; (6) Enabled the concurrency flag in AeOnEvent [
  build 511, 11/3/06]


* Removed a workaround for determining proper source namespace from
  AeAddressingHeaders that is no longer necessary [ build 512, 11/3/06]


* 1) Added some convenience methods on AeBaseDef to get/set/remove the xmlns
  default namespace decl 2) Added a new conversion visitor that adds a
  potentially missing scope def as the child of an onAlarm in an event handler
  3) Modified the def output layer to be capable of generating prefixed XML
  rather than using a default bpws/bpel namespace (the default is now
  prefixed) [ build 513, 11/4/06]


* (1) Defect 2139; (2) added makeNewFault to AeFaultFactory to clone a fault
  with rethrowable and suspendable flag sets; (3) Updated base reply receiver
  class to use the rethrowable (makeNewFault) fault for onFault callback [
  build 514, 11/6/06]


* Fix of problem loading external WSDL for deployed services [ build 515,
  11/6/06]


* 1) added support for concurrent handling of onAlarm's with repeatEvery 2)
  some refactorings to enable better code sharing between concurrent onEvent
  and onAlarm impls [ build 516, 11/6/06]


* Defect 2248 - when opaque activity def is validated, call super.validate to
  build the target links for validation [ build 517, 11/6/06]


* Merged change for 2.1.2 to fix problem restoring deadpath source link
  status. [ build 518, 11/7/06]


* (1) Add support for journaling pending invokes to fix defect 1191, "Pending
  invokes are not completing after the cluster cleanup delay." (2) Add
  isRunning() method to IAeBusinessProcessEngineInternal and its
  implementations. [ build 519, 11/8/06]


* 1) added format for generic process info events 2) use generic process info
  event for invoke retries, invalid state transitions, and unmatched requests
  3) fixed issue in AeActivityCompensateDef where it wasn't checking for its
  nesting properly 4) added more static analysis for isolated scopes 5)
  changed onEvent scope to init its plink data in ready-to-execute stage [
  build 520, 11/8/06]


* (1) Defect 1558 - updated AeProcessCompensationCallbackWrapper to set the
  process state to faulted (instead of completed) if the process instance
  compensation handler was terminated; (2) In AeReplyReceiverBase - removed
  IAeCoordinating.WSCOORD_ID entry from Business process properties. This was
  previously done in the subclass AeQueuingReplyReceiver, now moved to the
  base [ build 521, 11/9/06]


* Added a protected getter on AeProcessDef that is used only by a unit test. [
  build 522, 11/9/06]


* 1) fixed issue with ambiguousReceive 2) added ae:ambiguousReceive as a
  custom fault to send back to services that send us an ambiguousReceive [
  build 523, 11/9/06]


* Fix defect 2263, "Compensation handlers for isolated scopes are not
  acquiring locks for compensation." [ build 524, 11/9/06]


* Fix defect 2277, "Getting class cast exception when running process level
  compensation." (Yes, I forgot to run the online unit tests last night.) [
  build 525, 11/10/06]


* 1) Additional validation of literals (xsi:schemaLocation) 2) changes some
  validation warnings to errors 3) slightly improved error handling/logging
  during validation [ build 526, 11/13/06]


* 1) added error message for failure during process level variable
  initialization 2) added process info event for process level variable
  initialization failure [ build 527, 11/13/06]


* Fixed recently added constructor for process events which was improperly
  assigning event ids to the process id, which showed up in remote debug
  events. [ build 528, 11/13/06]


* (1) Defect 2294 related - admin console code requires bpws 1.1 processes's
  message exchanges to have location paths; (2) Added
  AeBPWSMessageExchangeDefPathSegmentVisitor to assign paths for bpws 1.1
  process message exhanges (currently used by admin console); (3) Added
  AeDefNullPathVisitor to assign paths for defs which do not already have
  location paths assigned; (4) Added ctor AeDefPathVisitor to take the init
  nextLocationId as a param. [ build 529, 11/14/06]


* rolling back previous change of adding number patterns for PID and EventID
  in eventFormat.properties due to a few events being fired without these
  values and causing errors in the console. Will return after release to track
  down which events are firing without PIDs or EventIds. [ build 530,
  11/14/06]


* Fix defect 2317, "Getting a warning 'Process <num>: completed recovery with
  1 journal entry remaining' when an invoke fails and you restart," by
  overriding setFaultedState() in addition to setState() in
  AeActivityInvokeImpl in order to remove the pending invoke journal entry. [
  build 531, 11/16/06]


* 1) Issue R1 keepSrcElement behavior for virtual <assign>. Virtual copy
  operations for fromPart/toPart use keepSrcElementName behavior 2) Issue R29
  Partner link's initializePartnerRole attribute. Changed attribute to be a
  tri-state bool with default being unset. Added static analysis check for
  attribute on plinks that don't have a partnerRoe. Converter no longer sets
  attribute since its not required. 3) R33 Optional XML Data in Assignments.
  Added ignoreMissingFromData to copy operation. [ build 532, 11/16/06]


* Removed warning message about unmatched request as we already log an info
  event with the process about the fact that a request for the process doesn't
  match any current waiting requests. [ build 533, 11/20/06]


* 1) Modified call to AeBusinessProcessEngine.queueReceiveData to return the
  processId to give us more detailed info for logging. 2) Changed
  AeQueuingReplyReceiver to validate input arguments [ build 534, 11/20/06]


* add method setRecoveredTransmissionId(long) to IAeInvokeInternal and to
  impl. AeInvoke (queue obj) to set the transmission id during recovery. [
  build 535, 11/21/06]


* Added 'handledFault' attribute of the AeDefaultFaultHandler class to the
  process state document. [ build 536, 11/21/06]


* Fixed a bug in fault deserialization - the 'handled fault' was being
  deserialized before the 'fault'. Since they can sometimes be the same, the
  deserialization would fail due to incorrect order of operations (the fault
  must be deserialized before the handledFault, since the handledFault is only
  a reference to the fault). [ build 537, 11/27/06]

org.activebpel.rt.tamino

* Added some new code for executing Tamino upgrades. I have added some
  additional options in the Tamino Patch file format, such as support for
  "select-into" and "undefine-doctype". This basically makes it easier to
  write Tamino upgrade patches. [ build 45, 11/2/06]


* Remove obsolete process persistence methods and fields that were also
  removed from the org.activebpel.rt.bpel.server project. [ build 46, 11/8/06]

org.activebpel.rt.bpeladmin.help.war

* Final edits for ActiveBPEL engine Admin Console Help for V3 launch [ build
  15, 11/20/06]

org.activebpel.rt.axis.bpel.web

* Update the version of the DTD in web.xml from 2.2 to 2.3 [ build 62,
  11/10/06]

org.activebpel.rt.bpel.server

* Fixed problem where undeploying BPR's in ActiveBPEL engine would leave
  behind WSDL resources. [ build 399, 11/3/06]


* (1) Updated AePddValidator to check for duplicate my role service names [
  build 400, 11/3/06]


* 1. Creating the abx:conversationId header up front in AePartnerAddressing
  when updating partner endpoints. 2. Fix issues in AePartnerAddressing with
  embedded wsa:Action headers in replyTo reference properties. [ build 401,
  11/3/06]


* (1) Defects 2139, 2250; (2) Updated queuing reply receiver class to use the
  rethrowable (makeNewFault) fault for onFault callback; (3) Update
  common-sql.xml to include LocationPath in the select clause for
  "CoordinationStorage.ListCoordinatorsForProcessId" and
  "CoordinationStorage.ListParticipantsForProcessId" queries. [ build 402,
  11/6/06]


* Fix of problem loading external WSDL for deployed services [ build 403,
  11/6/06]


* Defect 2256 - updated AeQueingReplyReceiver - to over-ride
  setBusinessProcessProperties to remove IAeCoordinating.WSCOORD_ID key from
  the properties [ build 404, 11/7/06]


* (1) Add support for journaling pending invokes to fix defect 1191, "Pending
  invokes are not completing after the cluster cleanup delay." (2) Add
  isRunning() method to IAeBusinessProcessEngineInternal and its
  implementations. (3) Fix defects 1527, "Getting an IllegalArgumentException
  when recovery is attempting to be done but the server is in the middle of
  shutting down," and 1475, "You cannot stop the ActiveBPEL engine while it is
  in the middle of recovery." [ build 405, 11/8/06]


* Changed AeQueuingReplyReceiver - moved removal of IAeCoordinating.WSCOORD_ID
  entry from Business process properties to the base class AeReplyReceiverBase
  [ build 406, 11/9/06]


* The AeMasterPolicyMapper will now include the WSA header handler in service
  request chains, rather than adding it to the global configuration since only
  BPEL processes actually handle WSA headers. [ build 407, 11/9/06]


* Changed updatePartnerLink in AeProcessDeployment so the partner endpoint is
  not initialized with WSA information if the message on the receive did not
  contain WSA information. [ build 408, 11/9/06]


* 1. Modified previous change to AeProcessDeployment.updatePartnerLink() to
  test for the presence of a wsa:ReplyTo header rather than the default action
  when determining whether to update the partner link with addressing headers
  that are mandatory for replies under wsa. 2. Fixed issue with creating
  AeMessageContext in AeProcessInvokeHandler where it was not setting up the
  inbound wsa headers properly and was updating the myRole endpoint with
  unwanted info from the invoker's partner role endpoint. [ build 409,
  11/10/06]


* Additional logging of errors during validation. [ build 410, 11/13/06]


* Eliminate extraneous warnings about unconsumed process journal entries when
  recovery completes process execution. [ build 411, 11/14/06]


* Defect 2268 - handle race condition in coordination where A completes before
  receiving B's COMPLETED signal. In this condition, A issues
  CANCEL_or_COMPLETE to B instead of just CANCEL. [ build 412, 11/15/06]


* Fixed issue with catalog event firing on replace entries when dependent on
  other files in deployment. [ build 413, 11/16/06]


* Changed AeQueuingReplyReceiver to validate input arguments [ build 414,
  11/20/06]


* KR code. Updated AeRecoveryEngine and AeRecoveryQueueManager to handle
  AeInvokeTansmittedJournalEntry's and set the recovered transmission id in
  the IAeInvokeInternal (queue obj) [ build 415, 11/21/06]


* Restore the coordination id for a subprocess invoke to the invoke's
  enclosing scope during recovery. [ build 416, 11/21/06]


* IAeProcessDeployment now caches the services to avoid db calls [ build 417,
  11/29/06]


* Display stack traces for the first exception as well as the last exception
  when the retry loops for saving a process or writing a journal entry fail. [
  build 418, 11/29/06]

ActiveBPEL engine v3.0.0 0 (20061201) 
 
ActiveBPEL engine v3.0.0 9 (20061101) 
 
org.activebpel.rt.axis

* Fixed problem reading nested imported schema references for deployed WSDL
  services [ build 59, 10/20/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build 60,
  10/25/06]

org.activebpel.rt

* added antoher convenience methof for SG: isCompatibleSGElement() [ build
  317, 10/12/06]


* base64 binary and hex binary schema classes now parse their data into byte
  arrays. They each have accessors for getting the parsed-out data. [ build
  318, 10/12/06]


* Added helper method to AeUtil to check for not null or empty collections. [
  build 319, 10/16/06]


* Added some QName definitions for several schema simple types. [ build 320,
  10/20/06]


* Fixed problem where imports of project relative resources with spaces in the
  project path were being URL encoded and causing problems during retrieval of
  resource [ build 321, 10/20/06]


* Modify AeXMLParserBase#loadDocumentFromString() not to try to parse an empty
  string, because the WebLogic 9.2 emits an error message to the log as well
  as throwing a parser exception. This was inspired by defect 2141, "I keep
  getting the error [Fatal Error] :-1:-1: Premature end of file. in my
  WebLogic log file running different tests." [ build 322, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  323, 10/25/06]


* Modified AeXMLParserBase.validateDocument() to always turn validation on and
  not rely on it being set, since we are calling validateDocument for the
  purpose of XML validation. [ build 324, 10/26/06]


* Updated to use new method isCompatibleSGElement() to prevent any confusion.
  [ build 325, 10/27/06]

org.activebpel.rt.axis.bpel

* 1. Refactor AeBpelHandler.invokeProcessEngine to check for and create a
  durable reply receiver using information from incomming message context. 2.
  Refactor mapOutputData and mapFaultData methods such that they can be called
  from durable reply receivers. [ build 171, 10/17/06]


* [Merge from 2.1.1] In AeBprDeployment, never set the thread context
  classloader to null, because that may prevent JBoss 4.0.4 from loading
  org.apache.axis.deployment.wsdd.WSDDProvider leading to mysterious
  "Excetpion - java.lang.ExceptionInInitializerError" when generating WSDL or
  handling incoming SOAP messages. [ build 172, 10/18/06]


* Added timestamp param to breakpoint and event handler stubs. [ build 173,
  10/20/06]


* Fix defect 2141, "I keep getting the error [Fatal Error] :-1:-1: Premature
  end of file. in my WebLogic log file running different tests." [ build 174,
  10/24/06]


* Update AeBpelHandler so that synchronous replies contain all mandatory wsa
  reply headers. [ build 175, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  176, 10/25/06]


* Modify RPC encoded sterilizer and invoke handler to handle the RPC call
  between two processes when the message is complex type, also to allow
  messages with substitution group mechanism transfer in the PRC call, both
  for RPC encoded and RPC literal. [ build 177, 10/27/06]


* Use endpoint property, rather than constant to determine wsa namespace. [
  build 178, 10/31/06]

org.activebpel.rt.bpeladmin.war

* Change due to interface change (def visitor interface). [ build 182,
  10/12/06]


* Added (BPEL 1.1 only) text to the "auto create target path" and "disable
  selction fault" option labels. [ build 183, 10/20/06]


* (1) Defects 2154,2155 (2) Added "BPEL Namespace" property Process Properies
  in the Admin console; (3) Updated process view code to run def preprocessors
  (visitors) before building the visual model [ build 184, 10/24/06]


* Req 148 changes (1) added 'seconds' to time out labels; (2) remove 'path'
  from process properties (process view) [ build 185, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  186, 10/25/06]


* Defect 2198 - exit activity in admin console was displayed as terminated [
  build 187, 10/26/06]


* Added process level termination handler tab to graphical views of process. [
  build 188, 10/30/06]

org.activebpel.rt.bpel

* Added fault handler validation process to prevent identical matches in a
  fault handler. The validation is distinct between WS-BPEL and BPWS, the
  former will not consider the fault variables. For WS-BPEL, static analysis
  will report error message, for BPWS, it will report warning message. [ build
  492, 10/12/06]


* 1) Refactorings: findPartnerLink -> findProcessPartnerLink,
  getPartnerLink(String name) -> findPartnerLink(String name) 2) Improved def
  i/o layer for reading attributes - attributes are now 'consumed' as they are
  read. Any attribute that is not read by the def i/o reader visitors is
  considered an extensibility attribute, even if it is unqualified 3)
  extension elements and extension attributes are now defs which are traversed
  and visited - this makes i/o easier and more consistent 4) implemented
  process level termination handler as an extension 5) added
  getDoXslTransformStylesheets() to the expression analyzer interface and
  impls 6) removed the extension registry in favor of a more unified BPEL
  registry (the extension registry wasn't being used) 7) cleaned up extension
  validation code now that extension elements and attributes are defs 8) XPath
  query validator is now namespace aware [ build 493, 10/12/06]


* (1) clarify any confusion for the fault handler, clean the fault handler
  strategy matrix and add more comments; (2) fixed the bug for catch order
  issue. Fault handler will always find the best match regardless the catch
  order. [ build 494, 10/17/06]


* (1) WS-BPEL treatment of open IMAs. (2) WS-BPEL treatment of the
  compensation handler of an isolated scope. (3) Re-implement link cycle
  detection: includes detecting cycles involving sequences and isolated
  scopes. (4) Remove IAeQueueManager#faultOutstandingReplies; this behavior is
  subsumed by WS-BPEL treatment of open IMAs, which sends faults to all open
  IMAs. (5) Move internally called methods from IAeBusinessProcess to
  IAeBusinessProcessInternal, so that IAeBusinessProcess defines exactly the
  interface required by the engine and the managers. (6) Move thread
  synchronization from AeExecutionQueue to AeBusinessProcess, only on
  IAeBusinessProcess methods. [ build 495, 10/18/06]


* 1) Some refactoring of engine/process events to share common base classes
  and to add a new base class (AeEvent) which adds a Timestamp to all events.
  2) The check start activity visitor now catches start activities within
  While, ForEach, and RepeatEvery loops [ build 496, 10/20/06]


* WSBPEL validation now logs an info message when extensions are in use. Fixed
  a bug in the xpath helper - the proper version of the xpath helper was not
  being returned by getInstance() [ build 497, 10/24/06]


* (1) Defects 2160, 2139, 2156; (2) Added assign-copy strategy for service-ref
  to wsa:epr element copying; (3) Updated AeExpressionLanguageFactory to
  support namespace aliases e.g. map bpel-abstract ns to bpel executable ns;
  (4) Added validator for opaque activity; (5) Update AeActivityInvokeImpl to
  reset transmission id on state change instead of onMessage/onFault callback
  to support retries; (6) Refactored AeWaitableReplyReceiver into
  AeReplyReceiverBase + AeWaitableReplyReceiver (AeQueueingReplyReceiver will
  now extend the base); (7) Enabled basic validation for abstract processes -
  this is currently based on the ws-bpel executable process validation (i.e.
  does not account for ##opaques). [ build 498, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  499, 10/25/06]


* 1) fixed issues with conflicting receives and scoped partner links 2)
  changed how messages are dispatched to receives/onMessag/onEvent in order to
  detect ambiguousReceives 3) added queuing scope to onEvent which is used to
  provide plink info during the queuing. This scope is also used to handle the
  messages until I turn concurrency back on [ build 500, 10/26/06]


* Fix AeProcessDef#findPartnerLink(AePartnerLinkDefKey) to handle partner link
  keys from upgraded 2.1.1 databases where the partnerLinkId will be -1. [
  build 501, 10/27/06]


* Project: org.activebpel.rt.bpel [ build 502, 10/27/06]


* Added ability for WS-BPEL 2.0 processes to use a process level termination
  handler and changed the extension for it and process level compensation to
  http://.../process_coordination. [ build 503, 10/30/06]


* Fixed problem where exceptions thrown from process/engine listeners were
  affecting process execution. [ build 504, 10/31/06]


* 1. Fix issue where the arguments of the abx:getMyRoleProperty function were
  not being validated. 2. Fix issue with cloning elements when adding to
  endpoint reference properties. 3. Removed unnecessary handling of actor and
  mustUnderstand in ws-addressing serializer. 4. Update inbound receive
  serializer/deserializer to use wsa namespace property on the endpoint,
  rather than a constant value for the 2003 namespace. [ build 505, 10/31/06]

org.activebpel.wsio

* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build 28,
  10/25/06]

org.activebpel.rt.tamino

* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build 44,
  10/25/06]

org.activebpel.rt.bpel.ext.expr

* Minor changes - mostly documentation and a couple of null pointer checks. [
  build 23, 10/12/06]

org.activebpel.rt.axis.bpel.web

* Propagate interface and method name changes from org.activebpel.rt.bpel. [
  build 61, 10/18/06]

org.activebpel.rt.bpel.server

* Update AeQueueStorage.findCorrelatedMatch() such that explicit correlation
  sets may be used in combination with engine managed correlation [ build 387,
  10/17/06]


* (1) Propagate IAeBusinessProcess and IAeQueueManager interface changes. (2)
  WS-BPEL treatment of open IMAs. [ build 388, 10/18/06]


* 1) Incremented the BPEL Admin version (due to the addition of timestamps on
  the event and breakpoint handlers) 2) Added timestamps to the breakpoing and
  event handler interfaces (and remote debug impl object) [ build 389,
  10/20/06]


* Refactoring of reply receivers - updated AeQueueingReplyReceiver to extend
  AeReplyReceiverBase [ build 390, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  391, 10/25/06]


* 1) minor changes in dispatching messages [ build 392, 10/26/06]


* Fixed a couple of issues with AeCatalog management of resources for
  ActiveBPEL product when deploying and undeploying BPR's with same
  locationHint of catalog entries. [ build 393, 10/26/06]


* Fixed problem where JUnit test was failing due to change from last build. [
  build 394, 10/26/06]


* (1) Fix transmission id deserialization in AeInvokeDataJournalEntry and
  AeInvokeFaultJournalEntry; (2) Remove partnerLinkId is null check from
  AeSQLQueueStorageProvider#readSQLMessageReceiver(), because the
  PartnerLinkId column is declared NOT NULL. [ build 395, 10/27/06]


* [Missed a file] (1) Fix transmission id deserialization in
  AeInvokeDataJournalEntry and AeInvokeFaultJournalEntry; (2) Remove
  partnerLinkId is null check from
  AeSQLQueueStorageProvider#readSQLMessageReceiver(), because the
  PartnerLinkId column is declared NOT NULL. [ build 396, 10/27/06]


* 1. Update pdd validation to support multiple wsa namespaces. 2. Fixed issue
  with wsa: headers embedded as reference properties within a reference
  property. [ build 397, 10/31/06]

ActiveBPEL engine v3.0.0 9 (20061101) 
 
org.activebpel.rt.axis

* Fixed problem reading nested imported schema references for deployed WSDL
  services [ build 59, 10/20/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build 60,
  10/25/06]

org.activebpel.rt

* added antoher convenience methof for SG: isCompatibleSGElement() [ build
  317, 10/12/06]


* base64 binary and hex binary schema classes now parse their data into byte
  arrays. They each have accessors for getting the parsed-out data. [ build
  318, 10/12/06]


* Added helper method to AeUtil to check for not null or empty collections. [
  build 319, 10/16/06]


* Added some QName definitions for several schema simple types. [ build 320,
  10/20/06]


* Fixed problem where imports of project relative resources with spaces in the
  project path were being URL encoded and causing problems during retrieval of
  resource [ build 321, 10/20/06]


* Modify AeXMLParserBase#loadDocumentFromString() not to try to parse an empty
  string, because the WebLogic 9.2 emits an error message to the log as well
  as throwing a parser exception. This was inspired by defect 2141, "I keep
  getting the error [Fatal Error] :-1:-1: Premature end of file. in my
  WebLogic log file running different tests." [ build 322, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  323, 10/25/06]


* Modified AeXMLParserBase.validateDocument() to always turn validation on and
  not rely on it being set, since we are calling validateDocument for the
  purpose of XML validation. [ build 324, 10/26/06]


* Updated to use new method isCompatibleSGElement() to prevent any confusion.
  [ build 325, 10/27/06]

org.activebpel.rt.axis.bpel

* 1. Refactor AeBpelHandler.invokeProcessEngine to check for and create a
  durable reply receiver using information from incomming message context. 2.
  Refactor mapOutputData and mapFaultData methods such that they can be called
  from durable reply receivers. [ build 171, 10/17/06]


* [Merge from 2.1.1] In AeBprDeployment, never set the thread context
  classloader to null, because that may prevent JBoss 4.0.4 from loading
  org.apache.axis.deployment.wsdd.WSDDProvider leading to mysterious
  "Excetpion - java.lang.ExceptionInInitializerError" when generating WSDL or
  handling incoming SOAP messages. [ build 172, 10/18/06]


* Added timestamp param to breakpoint and event handler stubs. [ build 173,
  10/20/06]


* Fix defect 2141, "I keep getting the error [Fatal Error] :-1:-1: Premature
  end of file. in my WebLogic log file running different tests." [ build 174,
  10/24/06]


* Update AeBpelHandler so that synchronous replies contain all mandatory wsa
  reply headers. [ build 175, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  176, 10/25/06]


* Modify RPC encoded sterilizer and invoke handler to handle the RPC call
  between two processes when the message is complex type, also to allow
  messages with substitution group mechanism transfer in the PRC call, both
  for RPC encoded and RPC literal. [ build 177, 10/27/06]


* Use endpoint property, rather than constant to determine wsa namespace. [
  build 178, 10/31/06]

org.activebpel.rt.bpeladmin.war

* Change due to interface change (def visitor interface). [ build 182,
  10/12/06]


* Added (BPEL 1.1 only) text to the "auto create target path" and "disable
  selction fault" option labels. [ build 183, 10/20/06]


* (1) Defects 2154,2155 (2) Added "BPEL Namespace" property Process Properies
  in the Admin console; (3) Updated process view code to run def preprocessors
  (visitors) before building the visual model [ build 184, 10/24/06]


* Req 148 changes (1) added 'seconds' to time out labels; (2) remove 'path'
  from process properties (process view) [ build 185, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  186, 10/25/06]


* Defect 2198 - exit activity in admin console was displayed as terminated [
  build 187, 10/26/06]


* Added process level termination handler tab to graphical views of process. [
  build 188, 10/30/06]

org.activebpel.rt.bpel

* Added fault handler validation process to prevent identical matches in a
  fault handler. The validation is distinct between WS-BPEL and BPWS, the
  former will not consider the fault variables. For WS-BPEL, static analysis
  will report error message, for BPWS, it will report warning message. [ build
  492, 10/12/06]


* 1) Refactorings: findPartnerLink -> findProcessPartnerLink,
  getPartnerLink(String name) -> findPartnerLink(String name) 2) Improved def
  i/o layer for reading attributes - attributes are now 'consumed' as they are
  read. Any attribute that is not read by the def i/o reader visitors is
  considered an extensibility attribute, even if it is unqualified 3)
  extension elements and extension attributes are now defs which are traversed
  and visited - this makes i/o easier and more consistent 4) implemented
  process level termination handler as an extension 5) added
  getDoXslTransformStylesheets() to the expression analyzer interface and
  impls 6) removed the extension registry in favor of a more unified BPEL
  registry (the extension registry wasn't being used) 7) cleaned up extension
  validation code now that extension elements and attributes are defs 8) XPath
  query validator is now namespace aware [ build 493, 10/12/06]


* (1) clarify any confusion for the fault handler, clean the fault handler
  strategy matrix and add more comments; (2) fixed the bug for catch order
  issue. Fault handler will always find the best match regardless the catch
  order. [ build 494, 10/17/06]


* (1) WS-BPEL treatment of open IMAs. (2) WS-BPEL treatment of the
  compensation handler of an isolated scope. (3) Re-implement link cycle
  detection: includes detecting cycles involving sequences and isolated
  scopes. (4) Remove IAeQueueManager#faultOutstandingReplies; this behavior is
  subsumed by WS-BPEL treatment of open IMAs, which sends faults to all open
  IMAs. (5) Move internally called methods from IAeBusinessProcess to
  IAeBusinessProcessInternal, so that IAeBusinessProcess defines exactly the
  interface required by the engine and the managers. (6) Move thread
  synchronization from AeExecutionQueue to AeBusinessProcess, only on
  IAeBusinessProcess methods. [ build 495, 10/18/06]


* 1) Some refactoring of engine/process events to share common base classes
  and to add a new base class (AeEvent) which adds a Timestamp to all events.
  2) The check start activity visitor now catches start activities within
  While, ForEach, and RepeatEvery loops [ build 496, 10/20/06]


* WSBPEL validation now logs an info message when extensions are in use. Fixed
  a bug in the xpath helper - the proper version of the xpath helper was not
  being returned by getInstance() [ build 497, 10/24/06]


* (1) Defects 2160, 2139, 2156; (2) Added assign-copy strategy for service-ref
  to wsa:epr element copying; (3) Updated AeExpressionLanguageFactory to
  support namespace aliases e.g. map bpel-abstract ns to bpel executable ns;
  (4) Added validator for opaque activity; (5) Update AeActivityInvokeImpl to
  reset transmission id on state change instead of onMessage/onFault callback
  to support retries; (6) Refactored AeWaitableReplyReceiver into
  AeReplyReceiverBase + AeWaitableReplyReceiver (AeQueueingReplyReceiver will
  now extend the base); (7) Enabled basic validation for abstract processes -
  this is currently based on the ws-bpel executable process validation (i.e.
  does not account for ##opaques). [ build 498, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  499, 10/25/06]


* 1) fixed issues with conflicting receives and scoped partner links 2)
  changed how messages are dispatched to receives/onMessag/onEvent in order to
  detect ambiguousReceives 3) added queuing scope to onEvent which is used to
  provide plink info during the queuing. This scope is also used to handle the
  messages until I turn concurrency back on [ build 500, 10/26/06]


* Fix AeProcessDef#findPartnerLink(AePartnerLinkDefKey) to handle partner link
  keys from upgraded 2.1.1 databases where the partnerLinkId will be -1. [
  build 501, 10/27/06]


* Project: org.activebpel.rt.bpel [ build 502, 10/27/06]


* Added ability for WS-BPEL 2.0 processes to use a process level termination
  handler and changed the extension for it and process level compensation to
  http://.../process_coordination. [ build 503, 10/30/06]


* Fixed problem where exceptions thrown from process/engine listeners were
  affecting process execution. [ build 504, 10/31/06]


* 1. Fix issue where the arguments of the abx:getMyRoleProperty function were
  not being validated. 2. Fix issue with cloning elements when adding to
  endpoint reference properties. 3. Removed unnecessary handling of actor and
  mustUnderstand in ws-addressing serializer. 4. Update inbound receive
  serializer/deserializer to use wsa namespace property on the endpoint,
  rather than a constant value for the 2003 namespace. [ build 505, 10/31/06]

org.activebpel.wsio

* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build 28,
  10/25/06]

org.activebpel.rt.tamino

* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build 44,
  10/25/06]

org.activebpel.rt.bpel.ext.expr

* Minor changes - mostly documentation and a couple of null pointer checks. [
  build 23, 10/12/06]

org.activebpel.rt.axis.bpel.web

* Propagate interface and method name changes from org.activebpel.rt.bpel. [
  build 61, 10/18/06]

org.activebpel.rt.bpel.server

* Update AeQueueStorage.findCorrelatedMatch() such that explicit correlation
  sets may be used in combination with engine managed correlation [ build 387,
  10/17/06]


* (1) Propagate IAeBusinessProcess and IAeQueueManager interface changes. (2)
  WS-BPEL treatment of open IMAs. [ build 388, 10/18/06]


* 1) Incremented the BPEL Admin version (due to the addition of timestamps on
  the event and breakpoint handlers) 2) Added timestamps to the breakpoing and
  event handler interfaces (and remote debug impl object) [ build 389,
  10/20/06]


* Refactoring of reply receivers - updated AeQueueingReplyReceiver to extend
  AeReplyReceiverBase [ build 390, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  391, 10/25/06]


* 1) minor changes in dispatching messages [ build 392, 10/26/06]


* Fixed a couple of issues with AeCatalog management of resources for
  ActiveBPEL product when deploying and undeploying BPR's with same
  locationHint of catalog entries. [ build 393, 10/26/06]


* Fixed problem where JUnit test was failing due to change from last build. [
  build 394, 10/26/06]


* (1) Fix transmission id deserialization in AeInvokeDataJournalEntry and
  AeInvokeFaultJournalEntry; (2) Remove partnerLinkId is null check from
  AeSQLQueueStorageProvider#readSQLMessageReceiver(), because the
  PartnerLinkId column is declared NOT NULL. [ build 395, 10/27/06]


* [Missed a file] (1) Fix transmission id deserialization in
  AeInvokeDataJournalEntry and AeInvokeFaultJournalEntry; (2) Remove
  partnerLinkId is null check from
  AeSQLQueueStorageProvider#readSQLMessageReceiver(), because the
  PartnerLinkId column is declared NOT NULL. [ build 396, 10/27/06]


* 1. Update pdd validation to support multiple wsa namespaces. 2. Fixed issue
  with wsa: headers embedded as reference properties within a reference
  property. [ build 397, 10/31/06]

ActiveBPEL engine v3.0.0 9 (20061101) 
 
org.activebpel.rt.axis

* Fixed problem reading nested imported schema references for deployed WSDL
  services [ build 59, 10/20/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build 60,
  10/25/06]

org.activebpel.rt

* added antoher convenience methof for SG: isCompatibleSGElement() [ build
  317, 10/12/06]


* base64 binary and hex binary schema classes now parse their data into byte
  arrays. They each have accessors for getting the parsed-out data. [ build
  318, 10/12/06]


* Added helper method to AeUtil to check for not null or empty collections. [
  build 319, 10/16/06]


* Added some QName definitions for several schema simple types. [ build 320,
  10/20/06]


* Fixed problem where imports of project relative resources with spaces in the
  project path were being URL encoded and causing problems during retrieval of
  resource [ build 321, 10/20/06]


* Modify AeXMLParserBase#loadDocumentFromString() not to try to parse an empty
  string, because the WebLogic 9.2 emits an error message to the log as well
  as throwing a parser exception. This was inspired by defect 2141, "I keep
  getting the error [Fatal Error] :-1:-1: Premature end of file. in my
  WebLogic log file running different tests." [ build 322, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  323, 10/25/06]


* Modified AeXMLParserBase.validateDocument() to always turn validation on and
  not rely on it being set, since we are calling validateDocument for the
  purpose of XML validation. [ build 324, 10/26/06]


* Updated to use new method isCompatibleSGElement() to prevent any confusion.
  [ build 325, 10/27/06]

org.activebpel.rt.axis.bpel

* 1. Refactor AeBpelHandler.invokeProcessEngine to check for and create a
  durable reply receiver using information from incomming message context. 2.
  Refactor mapOutputData and mapFaultData methods such that they can be called
  from durable reply receivers. [ build 171, 10/17/06]


* [Merge from 2.1.1] In AeBprDeployment, never set the thread context
  classloader to null, because that may prevent JBoss 4.0.4 from loading
  org.apache.axis.deployment.wsdd.WSDDProvider leading to mysterious
  "Excetpion - java.lang.ExceptionInInitializerError" when generating WSDL or
  handling incoming SOAP messages. [ build 172, 10/18/06]


* Added timestamp param to breakpoint and event handler stubs. [ build 173,
  10/20/06]


* Fix defect 2141, "I keep getting the error [Fatal Error] :-1:-1: Premature
  end of file. in my WebLogic log file running different tests." [ build 174,
  10/24/06]


* Update AeBpelHandler so that synchronous replies contain all mandatory wsa
  reply headers. [ build 175, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  176, 10/25/06]


* Modify RPC encoded sterilizer and invoke handler to handle the RPC call
  between two processes when the message is complex type, also to allow
  messages with substitution group mechanism transfer in the PRC call, both
  for RPC encoded and RPC literal. [ build 177, 10/27/06]


* Use endpoint property, rather than constant to determine wsa namespace. [
  build 178, 10/31/06]

org.activebpel.rt.bpeladmin.war

* Change due to interface change (def visitor interface). [ build 182,
  10/12/06]


* Added (BPEL 1.1 only) text to the "auto create target path" and "disable
  selction fault" option labels. [ build 183, 10/20/06]


* (1) Defects 2154,2155 (2) Added "BPEL Namespace" property Process Properies
  in the Admin console; (3) Updated process view code to run def preprocessors
  (visitors) before building the visual model [ build 184, 10/24/06]


* Req 148 changes (1) added 'seconds' to time out labels; (2) remove 'path'
  from process properties (process view) [ build 185, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  186, 10/25/06]


* Defect 2198 - exit activity in admin console was displayed as terminated [
  build 187, 10/26/06]


* Added process level termination handler tab to graphical views of process. [
  build 188, 10/30/06]

org.activebpel.rt.bpel

* Added fault handler validation process to prevent identical matches in a
  fault handler. The validation is distinct between WS-BPEL and BPWS, the
  former will not consider the fault variables. For WS-BPEL, static analysis
  will report error message, for BPWS, it will report warning message. [ build
  492, 10/12/06]


* 1) Refactorings: findPartnerLink -> findProcessPartnerLink,
  getPartnerLink(String name) -> findPartnerLink(String name) 2) Improved def
  i/o layer for reading attributes - attributes are now 'consumed' as they are
  read. Any attribute that is not read by the def i/o reader visitors is
  considered an extensibility attribute, even if it is unqualified 3)
  extension elements and extension attributes are now defs which are traversed
  and visited - this makes i/o easier and more consistent 4) implemented
  process level termination handler as an extension 5) added
  getDoXslTransformStylesheets() to the expression analyzer interface and
  impls 6) removed the extension registry in favor of a more unified BPEL
  registry (the extension registry wasn't being used) 7) cleaned up extension
  validation code now that extension elements and attributes are defs 8) XPath
  query validator is now namespace aware [ build 493, 10/12/06]


* (1) clarify any confusion for the fault handler, clean the fault handler
  strategy matrix and add more comments; (2) fixed the bug for catch order
  issue. Fault handler will always find the best match regardless the catch
  order. [ build 494, 10/17/06]


* (1) WS-BPEL treatment of open IMAs. (2) WS-BPEL treatment of the
  compensation handler of an isolated scope. (3) Re-implement link cycle
  detection: includes detecting cycles involving sequences and isolated
  scopes. (4) Remove IAeQueueManager#faultOutstandingReplies; this behavior is
  subsumed by WS-BPEL treatment of open IMAs, which sends faults to all open
  IMAs. (5) Move internally called methods from IAeBusinessProcess to
  IAeBusinessProcessInternal, so that IAeBusinessProcess defines exactly the
  interface required by the engine and the managers. (6) Move thread
  synchronization from AeExecutionQueue to AeBusinessProcess, only on
  IAeBusinessProcess methods. [ build 495, 10/18/06]


* 1) Some refactoring of engine/process events to share common base classes
  and to add a new base class (AeEvent) which adds a Timestamp to all events.
  2) The check start activity visitor now catches start activities within
  While, ForEach, and RepeatEvery loops [ build 496, 10/20/06]


* WSBPEL validation now logs an info message when extensions are in use. Fixed
  a bug in the xpath helper - the proper version of the xpath helper was not
  being returned by getInstance() [ build 497, 10/24/06]


* (1) Defects 2160, 2139, 2156; (2) Added assign-copy strategy for service-ref
  to wsa:epr element copying; (3) Updated AeExpressionLanguageFactory to
  support namespace aliases e.g. map bpel-abstract ns to bpel executable ns;
  (4) Added validator for opaque activity; (5) Update AeActivityInvokeImpl to
  reset transmission id on state change instead of onMessage/onFault callback
  to support retries; (6) Refactored AeWaitableReplyReceiver into
  AeReplyReceiverBase + AeWaitableReplyReceiver (AeQueueingReplyReceiver will
  now extend the base); (7) Enabled basic validation for abstract processes -
  this is currently based on the ws-bpel executable process validation (i.e.
  does not account for ##opaques). [ build 498, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  499, 10/25/06]


* 1) fixed issues with conflicting receives and scoped partner links 2)
  changed how messages are dispatched to receives/onMessag/onEvent in order to
  detect ambiguousReceives 3) added queuing scope to onEvent which is used to
  provide plink info during the queuing. This scope is also used to handle the
  messages until I turn concurrency back on [ build 500, 10/26/06]


* Fix AeProcessDef#findPartnerLink(AePartnerLinkDefKey) to handle partner link
  keys from upgraded 2.1.1 databases where the partnerLinkId will be -1. [
  build 501, 10/27/06]


* Project: org.activebpel.rt.bpel [ build 502, 10/27/06]


* Added ability for WS-BPEL 2.0 processes to use a process level termination
  handler and changed the extension for it and process level compensation to
  http://.../process_coordination. [ build 503, 10/30/06]


* Fixed problem where exceptions thrown from process/engine listeners were
  affecting process execution. [ build 504, 10/31/06]


* 1. Fix issue where the arguments of the abx:getMyRoleProperty function were
  not being validated. 2. Fix issue with cloning elements when adding to
  endpoint reference properties. 3. Removed unnecessary handling of actor and
  mustUnderstand in ws-addressing serializer. 4. Update inbound receive
  serializer/deserializer to use wsa namespace property on the endpoint,
  rather than a constant value for the 2003 namespace. [ build 505, 10/31/06]

org.activebpel.wsio

* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build 28,
  10/25/06]

org.activebpel.rt.tamino

* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build 44,
  10/25/06]

org.activebpel.rt.bpel.ext.expr

* Minor changes - mostly documentation and a couple of null pointer checks. [
  build 23, 10/12/06]

org.activebpel.rt.axis.bpel.web

* Propagate interface and method name changes from org.activebpel.rt.bpel. [
  build 61, 10/18/06]

org.activebpel.rt.bpel.server

* Update AeQueueStorage.findCorrelatedMatch() such that explicit correlation
  sets may be used in combination with engine managed correlation [ build 387,
  10/17/06]


* (1) Propagate IAeBusinessProcess and IAeQueueManager interface changes. (2)
  WS-BPEL treatment of open IMAs. [ build 388, 10/18/06]


* 1) Incremented the BPEL Admin version (due to the addition of timestamps on
  the event and breakpoint handlers) 2) Added timestamps to the breakpoing and
  event handler interfaces (and remote debug impl object) [ build 389,
  10/20/06]


* Refactoring of reply receivers - updated AeQueueingReplyReceiver to extend
  AeReplyReceiverBase [ build 390, 10/24/06]


* Removed invalid NON-NLS comments caught by new eclipse compiler. [ build
  391, 10/25/06]


* 1) minor changes in dispatching messages [ build 392, 10/26/06]


* Fixed a couple of issues with AeCatalog management of resources for
  ActiveBPEL product when deploying and undeploying BPR's with same
  locationHint of catalog entries. [ build 393, 10/26/06]


* Fixed problem where JUnit test was failing due to change from last build. [
  build 394, 10/26/06]


* (1) Fix transmission id deserialization in AeInvokeDataJournalEntry and
  AeInvokeFaultJournalEntry; (2) Remove partnerLinkId is null check from
  AeSQLQueueStorageProvider#readSQLMessageReceiver(), because the
  PartnerLinkId column is declared NOT NULL. [ build 395, 10/27/06]


* [Missed a file] (1) Fix transmission id deserialization in
  AeInvokeDataJournalEntry and AeInvokeFaultJournalEntry; (2) Remove
  partnerLinkId is null check from
  AeSQLQueueStorageProvider#readSQLMessageReceiver(), because the
  PartnerLinkId column is declared NOT NULL. [ build 396, 10/27/06]


* 1. Update pdd validation to support multiple wsa namespaces. 2. Fixed issue
  with wsa: headers embedded as reference properties within a reference
  property. [ build 397, 10/31/06]

ActiveBPEL engine v3.0.0 M2 (20061011) 
 
org.activebpel.rt

* 1) Added impl classes to handle hexBinary and base64Binary schema types 2)
  refactored schema impl classes to introduce a base class that handles the
  input parsing and toString functionality 3) added data-based (not
  string-based) constructors to the gDay, gMonth, etc impl classes [ build
  297, 9/7/06]


* In the class AePropertyAliasImpl initialized the class variable mNamespaces
  with an empty HashMap object to prevent NPEs. [ build 298, 9/11/06]


* 1) added some helper methods on AeMessagePartsMap to return single element
  part info 2) addressing-2003-03.xsd was invalid, it was missing the ns
  prefix declarations 3) standardSchemas.xml had a trailing slash for the 2003
  addressing schema which prevented it from being cached properly, which is
  just as well since the cached file was invalid anyway. [ build 299, 9/11/06]


* Added schema util method to prcess schema substitution group attirbute for
  fault handler: (1), to handle diff version of schema, using two schemas with
  diff namespace; (2), two schema elements will be input to get their group
  level. 0 for the same level, n for the the level the memeber exists, and -1
  for out of group members. [ build 300, 9/13/06]


* Changed AeXmlUtil::documentToString to explicitly use Xalan as the
  Transformer - if we don't do that, then we may get the Java 1.5 Transformer,
  which has some problems. [ build 301, 9/15/06]


* 1. Refactor IAePolicyConstants to remove mapper-specific items 2. Add
  Serializable interface to AeTypedSet for serialization on WSRM message
  contexts [ build 302, 9/15/06]


* Added code to check for NPE in AeXmlUtil::getDeclaredNamespaces(Element);
  Added new method AeUtil::normalizeText(aString) which returns a single line
  text string after removing extra spaces, tabs, newlines etc. [ build 303,
  9/18/06]


* Added an entry point on the xml validator for validating complex types that
  takes an Element rather than a Document. [ build 304, 9/18/06]


* Added until method to get substitution group level. This is used in copy
  activity when keepSrcElementNAme is set to yes, also used in fault handler.
  [ build 305, 9/20/06]


* fix javadoc [ build 306, 9/21/06]


* 1) removed TODO [ build 307, 9/22/06]


* Add new policy constants for engine managed correlation [ build 308,
  9/26/06]


* Added new constructor for AeBPELExtendedWSDLDef to wrap schemas easily. [
  build 309, 9/26/06]


* 1) more methods for single element part on AeMessagePartsMap [ build 310,
  9/26/06]


* 1) Moved setQNameAttribute from AeWriterVisitor to AeXmlUtil - it is a
  static helper method 2) Moved IAeNamespaceContext from rt.bpel 3)
  IAeMutableNamespaceContext now extends IAeNamespaceContext 4) Reverted
  TransformerFactory change - Xalan is no longer hard coded (fix for web logic
  9.0 problem) [ build 311, 9/27/06]


* Fix defect 2065, "Attempting to view the data of a complex or simple schema
  type variable on the Admin console displays 'Variable not initialized'." [
  build 312, 9/27/06]


* Added code in the XML parser base to support a system property for
  specifying the transformer factory to use for serializing XML. This feature
  is used in the Designer to work around a problem with the 1.5 JRE impl of
  the transformer. [ build 313, 9/27/06]


* Defect 2104 "Getting a bunch of errors attempting to convert
  the attached 1.1 process to 2.0"; Added new class
  AeElementBasedNamespaceContext to be used by WSBPEL writer visitor (instead
  of def based ns context) [ build 314, 10/3/06]


* (1) Added getSubstitutioGroupLevel() method in this project and allow other
  projects to get it. This prevents the recycling of deppendecy and unnecessary
  code refactoring. (2) Added validation for element name and data matches
  whne substitiuion group is taken into account. [ build 315, 10/4/06]


* 1) AeBPELExtendedWSDLDef.fixupArray was setting the wrong maxOccurs value on
  array group [ build 316, 10/11/06]

org.activebpel.rt.axis.bpel

* Added the hexBinary and base64Binary mappings to the Axis WSDD files. [
  build 164, 9/7/06]


* Change to XPath mapper to ensure that elements are detatched from the
  SOAPEnvelope before adding them to myRole. This addresses defects relating
  to inconsistent results with getMyRoleProperty function in simulation and
  after serialization to the database. [ build 165, 9/15/06]


* remove the AeException which never throws in the related code [ build 166,
  9/20/06]


* Update to AeInvokeHandler to search for actor and mustUnderstand attributes
  in SOAP Namespace. [ build 167, 9/20/06]


* New AeInvokeHandler.updateReplyTo() method that updates engine managed
  correlation headers with the correct value for process id.
  AeInvokeHandler.createCall() method now takes an implicit replyTo endpoint
  w/reference properties needed for correlation to be included in the
  addressing [ build 168, 9/26/06]


* Update AeInvokeHandler.getReplyToEndpoint() to use conversation id from
  partner link instead of process id for engine managed correlations. [ build
  169, 9/27/06]


* Fix for defect 1957, "Web Applications that are functional with ABE 2.1.1
  fail in conjunction with 3.0," which is basically about incompatiblity with
  JBoss versions after JBoss 4.0.0. Changed AeAxisObjectProxyFactory to use
  the thread context classloader (which is the active-bpel web application
  classloader) to build dynamic proxies instead of the one that we were using,
  because under JBoss, the one that we were using (one of the JBoss unified
  classloaders) changed after JBoss 4.0.0. This change has been tested on
  JBoss 4.0.0, JBoss 4.0.4, Tomcat 5.0.25, WebLogic 9.0, and WebSphere. [
  build 170, 10/4/06]

org.activebpel.wsio

* Add support for storing the abx:conversationId correlation header within
  IAeWsAddressingHeaders implementations. Add a getter for the source
  namespace on IAeWebServiceEndpointReference interface. [ build 27, 9/26/06]

org.activebpel.rt.tamino

* Removed the Tamino engine config and moved the Tamino engine config
  stylesheet into org.activebpel.rt.axis.bpel.web/stylesheets [ build 38,
  9/7/06]


* Moved the tamino xslt back to the Tamino project. [ build 39, 9/7/06]


* Refactor to include the alarmId parameter in alarm related methods in the
  storage layer methods; Updated queries to support alarmId. [ build 40,
  9/18/06]


* Fixed a bug in Tamino for reading the query response information for a
  tamino xquery. [ build 41, 9/20/06]


* 1) removed messageExchange from AeQueuedReceive 2) added AllowsConcurrency
  to AeQueuedReceive [ build 42, 9/22/06]


* Minor refactoring in AeTaminoResponseHandler - caching the length of a
  NodeList in a for loop [ build 43, 9/25/06]

ddl.org.activebpel

* Added new column AlarmId (INT NOT NULL) to alarm manager table; updated PK
  to use triple (pid, locId and alarmId) instead of (pid, locId). NO upgrade
  scripts checked-in. [ build 32, 9/18/06]


* 1) removed messageExchange from AeQueuedReceive 2) added AllowsConcurrency
  to AeQueuedReceives [ build 33, 9/22/06]


* incremented db version, i forgot to do this when i changed the ddl for
  concurrent message receivers in my last check in [ build 34, 9/26/06]

org.activebpel.rt.axis

* Added serializer/deserializer for hexBinary and base64Binary schema types.
  Also added better handling of parse errors for all AeSchema*Type types - if
  we fail to parse the incoming data, the data will get deserialized as a
  String. This way the data will still get into the system, and we will rely
  on validation to fail at some later time (with a good error message). [
  build 58, 9/7/06]

org.activebpel.rt.bpeladmin.war

* 1) changes from class/method renames [ build 174, 9/22/06]


* Refactoring change (class rename). [ build 175, 9/24/06]


* Fixed problem display resource details in ie. [ build 176, 9/26/06]


* 1) removed the invoke def's isOneWay() in favor of determining if its
  one-way based on presence of output variable or fromParts. Also left note
  about removing "one-way" property from admin console OR working the WSDL
  visitors into the admin console so we can tell if the operation is a one-way
  or not. [ build 177, 9/26/06]


* (1) Defect 2004 - Admin console outline view does not support elseif tag.;
  (2) Updated fromParts/toParts icons from admin console's outline view. (3)
  IAeDefVisitor impl changes (for opaque activities) [ build 178, 9/27/06]


* (1) Defect 2089 - added hyperlink to fault variable in the process view (2)
  Refactoring due to removal of AeOpaqueFromDef from def visitor interfaces [
  build 179, 9/28/06]


* Defect 2091 - BPEL 1.1 compensateActivity with named scoped is rendered as a
  BPEL 2.0 compensateScope activity. [ build 180, 10/2/06]


* (1) Defect 2113 - support for extension activities in the admin console (2)
  Defect 2106 - hyperlink fault variables in catch block (3) Defect 2109 -
  hyperlink all variables in validate activity [ build 181, 10/5/06]

org.activebpel.rt.bpel

* 1) bug fix in the onEvent converter (if the onMessage happened to already
  have a scope child) 2) Fixed a defect in the xpath query validator for
  queries that use * as a location step 3) fixed a defect in the message part
  query usage class - it was showing a warning when using an absolute xpath
  query for an element part (should have been only for a non-element part) 4)
  better exception handling in the expression exec layer 5) introduced new
  copy strategies for statis analysis failures and selection failures 6) fixed
  a defect in the CreateXPath util where $varName syntax was not being handled
  properly 7) xpath variable context now leverages the
  AeGetVariableDataFunction impl to actually get the data for a given variable
  (ditto for the $linkName resolver + getLinkStatus) 8) better type handling
  in the expression exec layer: types are converted to Java/Ae types prior to
  calling custom functions - this will prevent custom functions from ever
  roeceiving, for example, native Saxon objects 9) Fixed a defect with XPath
  AST serialization when a string literal contains a ' character 10) added a
  new variant of AeXPathHelper::unwrapXPathValue that takes 3 args - the new
  arg is aAllowMultiSelection to make a distinction between empty selection
  and multi selections [ build 450, 9/7/06]


* 1) removed some BPWS 1.1 only methods from AeWSDLDefHelper and put them into
  a BPWS class where they were used 2) extracted IAeFaultTypeInfo from
  IAeFault in order to leverage the runtime fault matching logic during static
  analysis 3) renamed message parts map members on partner link activity defs
  from input/output to consumer/producer to be more consistent with their
  usage. 4) moved message parts map visitor from preProcessForExecution to
  runCommonVisitors since its result is needed for static analysis 5)
  AeCatchDef wasn't being considered as a variable parent by AeDefUtil's
  method for resolving a variable 6) added the message parts info to the
  IAeMessageDataConsumer/ProducerDef interfaces 7) refactored the existing
  fault matching strategies into their own package in the def layer so they
  could be used during static analysis 8)
  AeDefUtil.getVariableByName(String,AeBaseDef) was starting the resolution
  from the parent of the passed def instead of the def param itself. This
  change didn't affect any other callers. 9) changed the
  AePartnerLinkValidator code to focus just on the plink and its def while the
  actual operation interaction is validated by the individual wsio activity
  validators (leveraging a lot of code from a base class). 10) ws-bpels don't
  allow "." in their names 11) added more specific error messages for copy
  operations when the variable cannot be resolved 12) added validation for
  fromPart/toPart [ build 451, 9/11/06]


* Fixed problem of not being able to locate fault variables defined implicitly
  by Catch model [ build 452, 9/12/06]


* Added unit test case for schema util method which prcesses schema
  substitution group attirbute for fault handler: (1), to handle diff version
  of schema, using two schemas with diff namespace; (2), two schema elements
  will be input to get their group level. 0 for the same level, n for the the
  level the memeber exists, and -1 for out of group members. [ build 453,
  9/13/06]


* 1) Improved the xpath expression converter (1.1 -> 2.0) to support
  converting function calls of the form: bpws:getVariableData('varName',
  'partName', 'count(/abs/path/to/data)') - this will now get converted to
  count($varName.partName/path/to/data) 2) Improved 1.1 -> 2.0 conversion such
  that correlation defs are changed from "yes" to "join" where appropriate
  (multi-start activities) 3) Changed doXslTransform impl class to always use
  the Xalan transformer impl (the Java 1.5 impl has some problems) 4) Better
  handling of a Null to-spec when selecting a copy strategy 5) Changed xpath
  query validation from errors to warnings (temporarily) so that extended
  schema types can be used 5) Fixed a problem where BPEL 2.0 message exchanges
  were not being properly read 6) Improved the expression converter to convert
  an explicit xpath value for expressionLanguage from 1.1 URI value to 2.0 URI
  value [ build 454, 9/13/06]


* Changed the if activity impl slightly so that the first condition has an
  actual impl object (rather than being a part of the activity itself). This
  helps with debugging, allowing the user to stop on the condition itself. Did
  some refactoring of the xpath expression impl code to make the class
  hierarchy more consistent and clear. Added QName to the copy strategy type
  matcher so that we recognize it as a simple type and can copy it. [ build
  455, 9/15/06]


* Added ability to perform PartnerLink locking within isolated scopes. [ build
  456, 9/15/06]


* 1. Fix for AeEndpointReference issue where extensibility elements were being
  duplicated when reference data was updated more than once. 2. Refactor
  AeWsAddressingSerializer to obtain the SOAP MessageFactory from the BPEL
  engine rather than relying on the default from the JVM. Users can now
  specify the MessageFactory in AeEngineConfig if the default provider proves
  problematic. For example, using the WLS 9.1 provider, DOM elements from SOAP
  messages do not allow treating namespace declarations as attributes. [ build
  457, 9/15/06]


* Added alarm id column to Alarm manager DDL; The alarm id is assigned for
  each queued alarm and the id must match in order for a fired alarmed to be
  dispatched to the process; Refactored IAeQueueManager to include the alarmId
  parameter in alarm related methods; update process state save/restore code
  to handle persistence of alarmId. [ build 458, 9/18/06]


* 1) some refactoring in the expression lang layer for better extensibility 2)
  change to variable validation for cases where getTypeData() returns an
  Element rather than a Document 3) xpath expression helper will now use the
  documentElement rather than a Document as a the context for a query - this
  is needed so that relative xpaths execute properly [ build 459, 9/18/06]


* Modify AeDefVariableUsageVisitor to handle separate isolation domain for the
  compensation handler of an isolated scope; implement deferred link
  notification for links leaving isolated scopes. [ build 460, 9/19/06]


* Changes to the spec strategy mapper to support selecting the proper to-spec
  class for the expression form of the to-spec. We no longer assume XPath, but
  instead we get an IAeExpresionAnalyzer in order to select the correct spec
  strategy key depending on the content of the expression (and depending on
  the expression language). [ build 461, 9/20/06]


* Update to AeEndpointReference to fix issues with "actor" and
  "mustUnderstand" headers that are treated separately from other attributes
  by some SOAPElement impls (i.e. Axis). Now elements added to
  ReferenceProperties, Policy, or Extensibility elements are cloned so they
  are plain-vanilla DOM elements and any actor or mustUnderstand attributes
  are qualified in the SOAP namespace. [ build 462, 9/20/06]


* 1) first pass at onEvent concurrency 2) dropped messageExchange from
  IAeBusinessProcess.queueMessageReceiver, only needed when the inbound
  receive arrives, not at the time of queueing 3) removed correlationMap from
  IAeBusinessProcess.queueReply, wasn't being used and was a throwback to the
  old queue object impls 4) moved AeMessageExchangeVisitor from
  preProcessForExecution to runCommonVisitors. It's used by the execution
  layer and static analysis layer 5) moved all instance path methods from
  AeActivityForEachDef to AeLocationPathUtils 6) refactored
  AeMessageExchangeValidationVisitor to simplify and account for onEvent plink
  and messageExchange resource resolution rules 7) commented out correlation
  validation code until I can come back and update the code to account for
  correlation where there is no message variable 8) changed
  IAeBpelObject.getVariable and getCorrelationSet to findXXXX. 9) new impls
  for IAeCorrelations for receives and onEvent. This is a result of some
  refactoring for onEvent which has special resolution rules for its resources
  10) changed AeImplicitVariableVisitor to se interface for the variables
  container instead of the scope reference. This is for catch blocks in
  ws-bpel that declare their variables 11) AeWSBPELImplementationTraverser
  skips over child scope since its impl is deferred until the message arrives
  12) added do/while loop to AeBaseQueueManager.addMessageReceiver so a
  message receiver that supports concurrency (onEvent) will consume all of the
  available messages at the time it is queued. 13)
  AeBaseQueueManager.consumeInboundReceive leaves the message receiver entry
  queued if it concurrent 14) AeOpemMessageActivityInfo uses
  AePartnerLinkOpImplKey instead of plink name and operation to track open
  IMA's. 15) AeQueuedReceiveKey uses partner link def key to detect
  conflicting receives instead of the plink op impl key. One reason being that
  the onEvent's plink might not be available until its message arrives.
  Another reason being that the different plink impls aren't sufficient to
  disambiguate between the receives, hence we'd still have an ambiguity when
  it came time to route the inbound receive 16) extracted all dynamic scope
  creation code from AeActivityForEachParallelImpl to AeDynamicScopeCreator
  17) update save/restore impl visitors for onEvent concurrency [ build 463,
  9/22/06]


* Refactored the fault matching strategy, added new interface IAeMAtch and
  implementation to make a cleaner logic for best fault match based. [ build
  464, 9/22/06]


* 1) added extension attribute support to the def layer 2) added namespace
  declarations for the new extension namespaces 3) for bpel 2.0 processes,
  break, suspend, and continue are now extension activities 4) unknown
  extension activities (if mustUnderstand == 'no') get turned into Empty
  activities at the impl layer 5) updated process conversion to wrap ae
  extension activities in the proper defs [ build 465, 9/24/06]


* 1) Implemented createTargetXPath and disableSelectionFailure options in the
  AeProcessDef (and def i/o layer). 2) added accessors for those options onto
  the IAeBusinessProcess interface - all access to those properties should go
  through the process, since BPEL 2.0 processes have new attributes that
  control that behavior (rather than hitting the engine config). [ build 466,
  9/25/06]


* Update to AeAddressingHeaders and AeWSAddressingSerializer/Deserializer to
  handle new conversationId correlation header.
  AeBusinessProcess.queueMessageReceiver now calls
  getEngineManagedCorrelationData() to setup the receiver correlation for
  engine managed. AeBusinessProcessEngine now includes engine managed
  correlation when creating correlation maps. [ build 467, 9/26/06]


* Extended import/reference handling to handle direct imports of schemas for
  type lookups. [ build 468, 9/26/06]


* In the class AeProcessDef added a helper method to return an Iterator of
  extension definition objects that are declared in the process. [ build 469,
  9/26/06]


* 1) added support for ws-bpel onEvent that reference plinks and
  correlationSets in their child scope as opposed to their anscestor scopes.
  This involved creating a special impl of the scope that exists only within
  the onEvent. This scope will update the plink and consume the message during
  its execution. This simplifies the problem of having to update a scope's
  resources (correlationSet, variables, plinks) prior to the scope executing.
  2) removed AeActivityInvokeDef.isOneWay() - this is no longer accurate for
  ws-bpel as the variable is optional if the response message is empty 3)
  added temporary workaround for resolving plink, cs, and variables correctly
  in the def layer. Currently, IMA defs will return a context def to use in
  the AeDefUtil.findXXXX(String) methods. This will eventually change to
  resolve the resources through the defs themselves as opposed to the util
  class 4) changed message exchange validation visitor to report warnings for
  bpws and errors for ws-bpel 5) fixed issues with correlation validation to
  not require variables, wsio activities with fromParts/toParts that use
  correlation are validated correctly 6) changed AeDefToImplVisitor to keep a
  collection of plinks that get created similar to how variables are tracked.
  7) fixed NPE in AeBusinessProcess.getEngineManagedCorrelationData and left
  note to return. This code currently doesn't work for scoped plinks or
  onEvent 8) changed AeActivityImpl to notify its parent prior to firing link
  changes. The parent should be given a chance to complete prior to any other
  activities executing. This is especially important for a link leaving a
  scope as detailed in Defect 2085 9) changed AeCopyStrategyFactory to replace
  static analysis failure strategy with mismatched assignment strategy. I will
  restore once static analysis catches all of the illegal copy operations 10)
  update save and restore visitors to handle the messageData and
  messageContext for the onEvent's scope. [ build 470, 9/26/06]


* Req 130 - Added support for wsbpel 2.0 abstract processes: (1) Add
  AeOpaqueActivityDef and AeOpaqueFromDef (note: latter will be removed
  later); (2) Updated def visitor interface to support AeOpaqueActivityDef and
  refactored impls. as needed; (3) Updated def i/o layer to support the opaque
  defs. ; (4) Defect 2084 - changed error message related to wsa epr
  serializer/deserilizers.; (5) Added no-op validator for abstract processes
  (will expand on this at a later check-in); (6) Defect 2004 - Admin console
  outline view does not support elseif tag.; (7) Updated fromParts/toParts
  icons from admin console's outline view. [ build 471, 9/27/06]


* 1) Moved IAeNamespaceContext down to org.activebpel.rt 2) Base def NS
  context now implements IAeMutableNamespaceContext instead of
  IAeNamespaceContext - this required an additional method impl
  (getOrCreatePrefixForNamespace) 3) Updated the extension conversion visitor
  to add an extension def if a bpel 1.1 process being converted has a process
  level compensation handler 4) Changed the expression conversion visitor to
  utilize the new IAeMutableNamespaceContext interface 5) Changed def i/o
  layer to properly read/write process-level compensation handler as a
  Ae-extension element for wsbpel processes 6) Some refactoring of
  AeWriterVisitor's many setAttribute* methods (cleanup) [ build 472, 9/27/06]


* Fix defect 2064, "Complex Type variable persistence does not work (always
  assumes simple type)." [ build 473, 9/27/06]


* 1. New IAePartnerLink.getConversationId() method to return the identifier
  used for engine managed correlations. The id is a combination of the process
  id and the partner link location id. 2.Added
  IAeMessageReceiverActivity.findPartnerLink() method so we can resolve scoped
  partner links from the message receiver rather than the process. [ build
  474, 9/27/06]


* Fix error with AeOnEvent.getPartnerLink() [ build 475, 9/28/06]


* (1) Removed AeOpaqueFromDef and updated visitor interfaces to reflect this
  change (2) Updated i/o layer to set/get AeFromDef::isOpaque when
  reading/writing <opaqueFrom/> element [ build 476, 9/28/06]


* Update and implementation in these projects are:(1), Disable the concurency
  and update the related code. Most of code will be restored once the
  concurrency is impld for admin console and designer.(2), Refactored the
  fault handler strategy and made the logic more clear and easy to understand.
  (3), Added to the fault handler rule for handling the element and message
  fault with substitution group [ build 477, 9/28/06]


* 1) Now cloning data when copying it from a fault to a catch's fault variable
  (so that rethrow throws the original data) 2) Added some error handling back
  in to the expression runner for getting deadline and duration values (in
  order to supply an appropriate fault) [ build 478, 9/28/06]


* Defect 2101 "Admin Console is not displaying partner role properties on
  scoped partner links in attached fan out example" - updated
  AeSaveImplVisitor::appendPartnerLink to use instance locationId/locationPath
  (to support forEach) instead of def's location id.; Added
  AeWSBPELProcessValidator (to account for createXpath and disable selection
  failures attrs) and updated related code (AeWsBPELDeftoValidationVisitor);
  Updated AeWSBPELWriter visitor to use the new
  AeElementBasedNamespaceContext class to handle ns and prefixes. [ build 479,
  10/3/06]


* 1) Numerous static analysis bug fixes *) isolated scopes check for nested
  isolated scopes for ws-bpel and leaf scopes for bpws *) compensateScope
  activity checks for empty target *) forEach activity validates reports empty
  start/final expressions and reports empty completionCondition *)
  while/repeatUntil/if report empty condition *) validate activity reports
  empty variables value *) wait/onAlarm reports empty until/for expression *)
  copy operation reports warning for mismatched assignment failure (copying
  message var to non-message var) *) from and to check that plink has the
  specified role for assignment 2) AeBusinessProcess exits in its
  objectCompletedWithFaultInternal method [ build 480, 10/3/06]


* Removed some FIXME's I had in the code for missing javadoc [ build 481,
  10/3/06]


* Defect 1883: (1) Added process exception management related methods
  to IAeExecutableBPELObject. (2) Updated AeActivityReplyImp to override process
  exception management completeActivity to decrement outstanding reply count
  before 'completing' activity. [ build 482, 10/4/06]


* (1) Fix incompatibility between doXslTransform() function and WebLogic 9.0;
  (2) Remove erroneous short return from
  AeActivityScopeImpl#findOrCreateMatchingFaultHandler [ build 483, 10/4/06]


* Build error: check in again after build all jars. [ build 484, 10/4/06]


* (1) Remove code from getSubstitutionGroupLevel() to org.activebepel.rt
  package and keep the exisiting method call other class to get SG level. (2)
  Modified code to get WSDLDef for vlaidation. (3) Updated
  AeWSIOActivityValidator for static analysiss when SG is considered. [ build
  485, 10/4/06]


* Added a null check to AeEndpointReference.setReferenceData() [ build 486,
  10/5/06]


* 1) removed getPropertyAlias from IAeBusinessProcess and moved into
  AeProcessDef. 2) AeProcessDef's lookup of propertyAlias for correlation will
  consider an element propAlias for single part messages when a message
  propAlias isn't found. Will return to make other changes outlined in code
  after beta launch. 3) AeDefEntryPointVisitor records the message parts map
  for each of the receives for use in correlation 4) AeDefTraverser avoids
  traversing for documentation defs within AeQueryDef 5) refactored
  AeInlinePropertyAliasVisitor and wsbpel subclass to account for element
  style property aliases for correlation 6) changed
  AeConflictingRequestException to accept the BPEL namespace to produce the
  correct fault [ build 487, 10/5/06]


* (1) Defect 1881 work: (2) Added method isCompletable to IAeBpelObject
  (similar to isTerminatable) (3) AeAbstractBpelObject - updated
  exceptionManagementCompleteActivity method to compelete or dead path
  container children, added method getChildrenForCompletion() (4) removed
  throws AeBusinessProcessEx clause from
  AeActivityCompensateImpl::findRootScopeForCompensation(),
  getIterationScopes(), getMatchingScopes() methods (5) removed throws from
  AeActivityCompensateScopeImpl::getMatchingScopes(),
  AeCompInfo::getEnclosedInfoByScopeName and
  AeCoordinatorCompInfo::getEnclosedInfoByScopeName (6)
  AeActivityCompensateImpl - add overriden method getChildrenForCompletion [
  build 488, 10/5/06]


* Fixed a problem with convertToRelativeXPath() if the abs path was simply
  "/". [ build 489, 10/6/06]


* 1) fixed issue in static analysis fault matching - using the validator
  classes for the fault matching test instead of the AeCatchDef 2) AeCatchDef
  no longer impls IAeCatch 3) left note about repackaging IAeCatch and other
  fault matching interfaces/classes out of the def package [ build 490,
  10/6/06]


* 1) changed error message for forEach start/final expression to match the
  property sheet values 2) updated variable validation to validate that
  message variable initialization is from a message variable 3) fixed by where
  alarms remained queued [ build 491, 10/11/06]

org.activebpel.rt.bpeladmin.help.war

* Updated for ActiveBPEL Engine online help for beta release [ build 14,
  10/9/06]

org.activebpel.rt.axis.bpel.web

* Introduced a new engine config called aeEngineConfig-ActiveBPEL.xml and XSLT
  stylesheets that are used to transform the engine config into either a
  in-memory or a persistent configuration. This means that common engine
  config changes for ActiveBPEL only need to be made to a single file. [ build
  58, 9/7/06]


* Moved engine config XSLT stylesheets from 'stylesheets' to 'support/config'.
  Moved tamino transform to its own file. [ build 59, 9/7/06]


* Engine config change due to xpath, xquery, javascript classname changes. [
  build 60, 9/15/06]

org.activebpel.rt.bpel.ext.expr

* 1) Implemented XQuery 1.0 support (including $varName syntax support) for
  BPEL 2.0 2) integrated the latest version of Saxon (the library that
  provides our XQuery expression evaluator) 3) revamped the type handling in
  and out of XQuery expressions - Java/Ae types are now properly converted to
  native Saxon types and vice versa (in and out of custom functions, for
  example) [ build 14, 9/7/06]


* Fixed some problems with externalized strings (missing bundle keys, etc). [
  build 15, 9/13/06]


* Renamed/refactored several classes in the XQuery and JavaScript expression
  exec layers in order to make their class hierarchies more consistent/clean.
  [ build 16, 9/15/06]


* Implemented javascript support for BPEL 2.0 processes. Support is "basic" at
  this point - getVariableData and getLinkStatus are still used (instead of
  implementing some equivalent of the xpath/xquery $varName and $linkStatus
  syntax). [ build 17, 9/18/06]


* Implemented the new method on the IAeExpressionAnalyzer interface for all
  implementations. For all BPWS impls the method throws unsupportedexception.
  For WSBPEL XPath there is a real impl. For WSBPEL-XQuery and JS there is no
  impl yet (returns null). Those are not yet complete. [ build 18, 9/20/06]


* 1) changes from class/method renames [ build 19, 9/22/06]


* Implemented the expression form of the to-spec for both XQuery and
  JavaScript. XQuery expressions in the to-spec have the same restrictions as
  XPath. JavaScript expressions must be of the form:
  bpel.getVariableData('varName'[, 'partName'][, 'query']) [ build 20,
  9/25/06]


* Packaging changes due to moving the ns context from rt.bpel to rt. [ build
  21, 9/27/06]


* Added string extern
  AeWSBPELXQueryExpressionValidator.BPEL_1_1_ILLEGAL_FUNCTION_USAGE [ build
  22, 10/2/06]

org.activebpel.rt.bpel.ext.expr.bsf

* Minor change to the bsf bpel extension function bean in preparation for
  supporting bpel 2.0 processes with BSF. [ build 10, 9/27/06]


* Simple refactoring changes, better handling of exceptions in the expression
  exec layer. [ build 9, 9/7/06]

org.activebpel.rt.bpel.server

* 1. Add getSOAPMessageFactory() method to AeEngineFactory. Returns the
  specific MessageFactory impl specified in AeEngineConfig. If none specified,
  the default is whatever is configured as -Djavax.xml.soap.MessageFactory. 2.
  Update to AePartnerAddressing for SOAPMessageFactory change. 3. Update to
  AeInvoker to ensure that the transmission id is set for a fault reply as
  well as a regular reply. [ build 372, 9/15/06]


* Added alarm id column to Alarm manager DDL; Refactor to include the alarmId
  parameter in alarm related methods and storage layer methods; Updated SQL
  queries to support alarmId. [ build 373, 9/18/06]


* Modify AeDefVariableUsageVisitor to handle separate isolation domain for the
  compensation handler of an isolated scope; implement deferred link
  notification for links leaving isolated scopes; leave breadcumbs for
  reducing memory usage for scopes attached to AeCompInfo objects; add
  AeSOAPMessageFactory to make engine-configured SOAP message factory
  available in rtbpel layer. [ build 374, 9/19/06]


* Add rt.bpel.AeSOAPMessageFactory to make engine-configured SOAP message
  factory available in rtbpel layer. [ build 375, 9/19/06]


* The preProcessForValidation now requires the expression language factory. [
  build 376, 9/20/06]


* 1) updated persisted message receiver and queue storage to handle concurrent
  message receivers 2) updated queries [ build 377, 9/22/06]


* New IAeDeploymentProvider.getDeployedServiceInfo() method that retrieves
  information about the service deployed for a particular partner link. New
  IAePartnerAddressing.getMyRoleEndpoint() method that gets the endpoint
  containing correlation policy and also serves as the implicit replyTo
  endpoint. AePartnerLinkStrategy.initPartnerLink() now initializes the myRole
  endpoint as well as the partnerRole.
  AeQueueStorage.findEngineCorrelatedMatch() supports matching with implicit
  correlation. [ build 378, 9/26/06]


* Added the ability on the PDD to catalog non-wsdl references, changed
  wsdlReferences entry to references in the PDD, added schema and other entry
  types to them. Plus added better support for caching schemas. [ build 379,
  9/26/06]


* 1) Refactored IAeProcessDeployment.updatePartnerLink to accept the message
  context instead of the inbound receive [ build 380, 9/26/06]


* 1. Update to AePartnerAddressing.getMyRoleEndpoint() to use the conversation
  id from the partner link rather than just use process id. 2. update to
  AePartnerAddressing.updateEndpointHeaders to deal with embedded wsa:ReplyTo
  headers in static reference properties. [ build 381, 9/27/06]


* Change to AePartnerAddressing.getMyRoleEndpoint() to resolve the URN for an
  implicit replyTo upfront [ build 382, 10/2/06]


* Defect 1925 - updated AeProcessInvokeHandler to propergate
  Engine::queueReceive faults and exceptions back into the wsio layer
  (IAeWebServiceResponse) [ build 383, 10/4/06]


* IAePartnerAddressing.mergeReplyEndpoint() will merge a source and target epr
  and resolve addresses using the URN resolver. This is used when transmitting
  endpoint headers for WS-Addressing & WSRM. [ build 384, 10/5/06]


* 1) added new exception for recovery engine to report conflicting request.
  Left note regarding further refactorings, will discuss [ build 385,
  10/5/06]


* Updated the AeProcessInvokeHandler such that it now sets up the
  ws-addressing headers in the AeMessageContext properly for engine managed
  correlation. [ build 386, 10/6/06]


